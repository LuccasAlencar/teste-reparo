// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuVision.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuVision.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828185504_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuVision.Models.Moto", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("chassi");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_entrada");

                    b.Property<string>("Fotos")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("fotos");

                    b.Property<string>("Observacoes")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("observacoes");

                    b.Property<decimal>("PatioId")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("patio_id");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("placa");

                    b.Property<DateTime?>("PrevisaoEntrega")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("previsao_entrega");

                    b.Property<string>("QrCode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("qr_code");

                    b.Property<decimal>("StatusId")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("status_id");

                    b.Property<decimal>("ZonaId")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("zona_id");

                    b.HasKey("Id")
                        .HasName("moto_pk");

                    b.HasIndex("Chassi")
                        .IsUnique()
                        .HasDatabaseName("moto_chassi_uk");

                    b.HasIndex("PatioId");

                    b.HasIndex("Placa")
                        .IsUnique()
                        .HasDatabaseName("moto_placa_uk");

                    b.HasIndex("StatusId");

                    b.HasIndex("ZonaId");

                    b.ToTable("moto", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.Patio", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("patio_pk");

                    b.ToTable("patio", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.Status", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nome");

                    b.Property<decimal>("StatusGrupoId")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("status_grupo_id");

                    b.HasKey("Id")
                        .HasName("status_pk");

                    b.HasIndex("StatusGrupoId");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.StatusGrupo", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("status_grupo_pk");

                    b.ToTable("status_grupo", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.Usuario", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("usuario");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("senha");

                    b.HasKey("Id")
                        .HasName("usuario_pk");

                    b.HasIndex("NomeUsuario")
                        .IsUnique()
                        .HasDatabaseName("usuario_usuario_uk");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.Zona", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("id");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("NVARCHAR2(1)")
                        .HasColumnName("letra");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("zona_pk");

                    b.ToTable("zona", (string)null);
                });

            modelBuilder.Entity("MottuVision.Models.Moto", b =>
                {
                    b.HasOne("MottuVision.Models.Patio", "Patio")
                        .WithMany("Motos")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("moto_patio_fk");

                    b.HasOne("MottuVision.Models.Status", "Status")
                        .WithMany("Motos")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("moto_status_fk");

                    b.HasOne("MottuVision.Models.Zona", "Zona")
                        .WithMany("Motos")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("moto_zona_fk");

                    b.Navigation("Patio");

                    b.Navigation("Status");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("MottuVision.Models.Status", b =>
                {
                    b.HasOne("MottuVision.Models.StatusGrupo", "StatusGrupo")
                        .WithMany("Statuses")
                        .HasForeignKey("StatusGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("status_fk");

                    b.Navigation("StatusGrupo");
                });

            modelBuilder.Entity("MottuVision.Models.Patio", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("MottuVision.Models.Status", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("MottuVision.Models.StatusGrupo", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("MottuVision.Models.Zona", b =>
                {
                    b.Navigation("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
