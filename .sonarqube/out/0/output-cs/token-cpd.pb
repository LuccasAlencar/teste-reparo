„ä
+A:\RiderProjects\teste de reparo\Program.cs
Env 
. 
Load 
( 	
)	 

;
 
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
. 
AddJsonOptions 
( 
options 
=> 
{ 
options 
. !
JsonSerializerOptions %
.% &
ReferenceHandler& 6
=7 8
ReferenceHandler9 I
.I J
IgnoreCyclesJ V
;V W
} 
) 
; 
builder 
. 
Services 
. 
AddDbContext 
< 
AppDbContext *
>* +
(+ ,
opt, /
=>0 2
{ 
var 

oracleUser 
= 
Environment  
.  !"
GetEnvironmentVariable! 7
(7 8
$str8 E
)E F
??G I
$strJ V
;V W
var 
oraclePassword 
= 
Environment $
.$ %"
GetEnvironmentVariable% ;
(; <
$str< M
)M N
??O Q
$strR \
;\ ]
var 

oracleHost 
= 
Environment  
.  !"
GetEnvironmentVariable! 7
(7 8
$str8 E
)E F
??G I
$strJ ^
;^ _
var   

oraclePort   
=   
Environment    
.    !"
GetEnvironmentVariable  ! 7
(  7 8
$str  8 E
)  E F
??  G I
$str  J P
;  P Q
var!! 
oracleService!! 
=!! 
Environment!! #
.!!# $"
GetEnvironmentVariable!!$ :
(!!: ;
$str!!; K
)!!K L
??!!M O
$str!!P V
;!!V W
var## 
connectionString## 
=## 
$"## 
$str## %
{##% &

oracleUser##& 0
}##0 1
$str##1 ;
{##; <
oraclePassword##< J
}##J K
$str	##K Ç
{
##Ç É

oracleHost
##É ç
}
##ç é
$str
##é ï
{
##ï ñ

oraclePort
##ñ †
}
##† °
$str
##° ø
{
##ø ¿
oracleService
##¿ Õ
}
##Õ Œ
$str
##Œ “
"
##“ ”
;
##” ‘
opt%% 
.%% 
	UseOracle%% 
(%% 
connectionString%% "
)%%" #
;%%# $
}&& 
)&& 
;&& 
builder(( 
.(( 
Services(( 
.(( #
AddEndpointsApiExplorer(( (
(((( )
)(() *
;((* +
builder)) 
.)) 
Services)) 
.)) 
AddSwaggerGen)) 
()) 
opt)) "
=>))# %
{** 
opt++ 
.++ 

SwaggerDoc++ 
(++ 
$str++ 
,++ 
new++ 
OpenApiInfo++ (
{,, 
Title-- 
=-- 
$str-- "
,--" #
Version.. 
=.. 
$str.. 
,.. 
Description// 
=// 
$str// j
}00 
)00 
;00 
}11 
)11 
;11 
var33 
app33 
=33 	
builder33
 
.33 
Build33 
(33 
)33 
;33 
using66 
(66 
var66 

scope66 
=66 
app66 
.66 
Services66 
.66  
CreateScope66  +
(66+ ,
)66, -
)66- .
{77 
await88 	
DatabaseInitializer88
 
.88 %
EnsureCreatedAndSeedAsync88 7
(887 8
scope888 =
.88= >
ServiceProvider88> M
)88M N
;88N O
}99 
app;; 
.;; 

UseSwagger;; 
(;; 
);; 
;;; 
app<< 
.<< 
UseSwaggerUI<< 
(<< 
)<< 
;<< 
app>> 
.>> 
MapGet>> 

(>>
 
$str>> 
,>> 
(>> 
)>> 
=>>> 
Results>> 
.>> 
Redirect>> &
(>>& '
$str>>' 1
)>>1 2
)>>2 3
;>>3 4
UsuarioEndpointsAA 
.AA 
	ConfigureAA 
(AA 
appAA 
)AA 
;AA  
ZonaEndpointsBB 
.BB 
	ConfigureBB 
(BB 
appBB 
)BB 
;BB 
MotoEndpointsCC 
.CC 
	ConfigureCC 
(CC 
appCC 
)CC 
;CC 
PatioEndpointsDD 
.DD 
	ConfigureDD 
(DD 
appDD 
)DD 
;DD 
StatusGrupoEndpointsEE 
.EE 
	ConfigureEE 
(EE 
appEE "
)EE" #
;EE# $
StatusEndpointsFF 
.FF 
	ConfigureFF 
(FF 
appFF 
)FF 
;FF 
awaitHH 
appHH 	
.HH	 

RunAsyncHH
 
(HH 
)HH 
;HH 
publicLL 
staticLL 
classLL 
UsuarioEndpointsLL $
{MM 
publicNN 

staticNN 
voidNN 
	ConfigureNN  
(NN  !
WebApplicationNN! /
appNN0 3
)NN3 4
{OO 
varPP 
usuariosPP 
=PP 
appPP 
.PP 
MapGroupPP #
(PP# $
$strPP$ 3
)PP3 4
.PP4 5
WithTagsPP5 =
(PP= >
$strPP> H
)PPH I
;PPI J
usuariosRR 
.RR 
MapGetRR 
(RR 
$strRR 
,RR 
GetUsuariosRR (
)RR( )
.SS 
WithOpenApiSS 
(SS 
opSS 
=>SS 
{TT 
opUU 
.UU 
SummaryUU 
=UU 
$strUU 8
;UU8 9
opVV 
.VV 
	ResponsesVV 
[VV 
$strVV "
]VV" #
=VV$ %
newVV& )
OpenApiResponseVV* 9
{WW 
DescriptionXX 
=XX  !
$strXX" >
,XX> ?
ContentYY 
=YY 
newYY !

DictionaryYY" ,
<YY, -
stringYY- 3
,YY3 4
OpenApiMediaTypeYY5 E
>YYE F
{ZZ 
[[[ 
$str[[ +
][[+ ,
=[[- .
new[[/ 2
OpenApiMediaType[[3 C
{\\ 
Example]] #
=]]$ %
new]]& )
OpenApiString]]* 7
(]]7 8
$str]c8 
)cc  
}dd 
}ee 
}ff 
;ff 
returngg 
opgg 
;gg 
}hh 
)hh 
;hh 
usuariosjj 
.jj 
MapGetjj 
(jj 
$strjj '
,jj' (
GetUsuarioByIdjj) 7
)jj7 8
.kk 
WithOpenApikk 
(kk 
opkk 
=>kk 
{ll 
opmm 
.mm 
Summarymm 
=mm 
$strmm 3
;mm3 4
opnn 
.nn 
	Responsesnn 
[nn 
$strnn "
]nn" #
=nn$ %
newnn& )
OpenApiResponsenn* 9
{oo 
Descriptionpp 
=pp  !
$strpp" 6
,pp6 7
Contentqq 
=qq 
newqq !

Dictionaryqq" ,
<qq, -
stringqq- 3
,qq3 4
OpenApiMediaTypeqq5 E
>qqE F
{rr 
[ss 
$strss +
]ss+ ,
=ss- .
newss/ 2
OpenApiMediaTypess3 C
{tt 
Exampleuu #
=uu$ %
newuu& )
OpenApiStringuu* 7
(uu7 8
$struu8 ]
)uu] ^
}vv 
}ww 
}xx 
;xx 
opyy 
.yy 
	Responsesyy 
[yy 
$stryy "
]yy" #
=yy$ %
newyy& )
OpenApiResponseyy* 9
{yy: ;
Descriptionyy< G
=yyH I
$stryyJ b
}yyc d
;yyd e
returnzz 
opzz 
;zz 
}{{ 
){{ 
;{{ 
usuarios}} 
.}} 
MapPost}} 
(}} 
$str}} 
,}} 
CreateUsuario}} +
)}}+ ,
.~~ 
WithOpenApi~~ 
(~~ 
op~~ 
=>~~ 
{ 
op
ÄÄ 
.
ÄÄ 
Summary
ÄÄ 
=
ÄÄ 
$str
ÄÄ +
;
ÄÄ+ ,
op
ÅÅ 
.
ÅÅ 
RequestBody
ÅÅ 
=
ÅÅ  
new
ÅÅ! $ 
OpenApiRequestBody
ÅÅ% 7
{
ÇÇ 
Content
ÉÉ 
=
ÉÉ 
new
ÉÉ !

Dictionary
ÉÉ" ,
<
ÉÉ, -
string
ÉÉ- 3
,
ÉÉ3 4
OpenApiMediaType
ÉÉ5 E
>
ÉÉE F
{
ÑÑ 
[
ÖÖ 
$str
ÖÖ +
]
ÖÖ+ ,
=
ÖÖ- .
new
ÖÖ/ 2
OpenApiMediaType
ÖÖ3 C
{
ÜÜ 
Example
áá #
=
áá$ %
new
áá& )
OpenApiString
áá* 7
(
áá7 8
$str
áá8 l
)
áál m
}
àà 
}
ââ 
}
ää 
;
ää 
op
ãã 
.
ãã 
	Responses
ãã 
[
ãã 
$str
ãã "
]
ãã" #
=
ãã$ %
new
ãã& )
OpenApiResponse
ãã* 9
{
åå 
Description
çç 
=
çç  !
$str
çç" 2
,
çç2 3
Content
éé 
=
éé 
new
éé !

Dictionary
éé" ,
<
éé, -
string
éé- 3
,
éé3 4
OpenApiMediaType
éé5 E
>
ééE F
{
èè 
[
êê 
$str
êê +
]
êê+ ,
=
êê- .
new
êê/ 2
OpenApiMediaType
êê3 C
{
ëë 
Example
íí #
=
íí$ %
new
íí& )
OpenApiString
íí* 7
(
íí7 8
$str
íí8 z
)
ííz {
}
ìì 
}
îî 
}
ïï 
;
ïï 
op
ññ 
.
ññ 
	Responses
ññ 
[
ññ 
$str
ññ "
]
ññ" #
=
ññ$ %
new
ññ& )
OpenApiResponse
ññ* 9
{
ññ: ;
Description
ññ< G
=
ññH I
$str
ññJ ]
}
ññ^ _
;
ññ_ `
return
óó 
op
óó 
;
óó 
}
òò 
)
òò 
;
òò 
usuarios
öö 
.
öö 
MapPut
öö 
(
öö 
$str
öö '
,
öö' (
UpdateUsuario
öö) 6
)
öö6 7
.
õõ 
WithOpenApi
õõ 
(
õõ 
op
õõ 
=>
õõ 
{
úú 
op
ùù 
.
ùù 
Summary
ùù 
=
ùù 
$str
ùù /
;
ùù/ 0
op
ûû 
.
ûû 
RequestBody
ûû 
=
ûû  
new
ûû! $ 
OpenApiRequestBody
ûû% 7
{
üü 
Content
†† 
=
†† 
new
†† !

Dictionary
††" ,
<
††, -
string
††- 3
,
††3 4
OpenApiMediaType
††5 E
>
††E F
{
°° 
[
¢¢ 
$str
¢¢ +
]
¢¢+ ,
=
¢¢- .
new
¢¢/ 2
OpenApiMediaType
¢¢3 C
{
££ 
Example
§§ #
=
§§$ %
new
§§& )
OpenApiString
§§* 7
(
§§7 8
$str
§§8 h
)
§§h i
}
•• 
}
¶¶ 
}
ßß 
;
ßß 
op
®® 
.
®® 
	Responses
®® 
[
®® 
$str
®® "
]
®®" #
=
®®$ %
new
®®& )
OpenApiResponse
®®* 9
{
©© 
Description
™™ 
=
™™  !
$str
™™" 6
,
™™6 7
Content
´´ 
=
´´ 
new
´´ !

Dictionary
´´" ,
<
´´, -
string
´´- 3
,
´´3 4
OpenApiMediaType
´´5 E
>
´´E F
{
¨¨ 
[
≠≠ 
$str
≠≠ +
]
≠≠+ ,
=
≠≠- .
new
≠≠/ 2
OpenApiMediaType
≠≠3 C
{
ÆÆ 
Example
ØØ #
=
ØØ$ %
new
ØØ& )
OpenApiString
ØØ* 7
(
ØØ7 8
$str
ØØ8 ^
)
ØØ^ _
}
∞∞ 
}
±± 
}
≤≤ 
;
≤≤ 
op
≥≥ 
.
≥≥ 
	Responses
≥≥ 
[
≥≥ 
$str
≥≥ "
]
≥≥" #
=
≥≥$ %
new
≥≥& )
OpenApiResponse
≥≥* 9
{
≥≥: ;
Description
≥≥< G
=
≥≥H I
$str
≥≥J ]
}
≥≥^ _
;
≥≥_ `
op
¥¥ 
.
¥¥ 
	Responses
¥¥ 
[
¥¥ 
$str
¥¥ "
]
¥¥" #
=
¥¥$ %
new
¥¥& )
OpenApiResponse
¥¥* 9
{
¥¥: ;
Description
¥¥< G
=
¥¥H I
$str
¥¥J b
}
¥¥c d
;
¥¥d e
return
µµ 
op
µµ 
;
µµ 
}
∂∂ 
)
∂∂ 
;
∂∂ 
usuarios
∏∏ 
.
∏∏ 
	MapDelete
∏∏ 
(
∏∏ 
$str
∏∏ *
,
∏∏* +
DeleteUsuario
∏∏, 9
)
∏∏9 :
.
ππ 
WithOpenApi
ππ 
(
ππ 
op
ππ 
=>
ππ 
{
∫∫ 
op
ªª 
.
ªª 
Summary
ªª 
=
ªª 
$str
ªª -
;
ªª- .
op
ºº 
.
ºº 
	Responses
ºº 
[
ºº 
$str
ºº "
]
ºº" #
=
ºº$ %
new
ºº& )
OpenApiResponse
ºº* 9
{
ºº: ;
Description
ºº< G
=
ººH I
$str
ººJ \
}
ºº] ^
;
ºº^ _
op
ΩΩ 
.
ΩΩ 
	Responses
ΩΩ 
[
ΩΩ 
$str
ΩΩ "
]
ΩΩ" #
=
ΩΩ$ %
new
ΩΩ& )
OpenApiResponse
ΩΩ* 9
{
ΩΩ: ;
Description
ΩΩ< G
=
ΩΩH I
$str
ΩΩJ b
}
ΩΩc d
;
ΩΩd e
return
ææ 
op
ææ 
;
ææ 
}
øø 
)
øø 
;
øø 
}
¿¿ 
private
¬¬ 
static
¬¬ 
async
¬¬ 
Task
¬¬ 
<
¬¬ 
IResult
¬¬ %
>
¬¬% &
GetUsuarios
¬¬' 2
(
¬¬2 3
HttpContext
¬¬3 >
ctx
¬¬? B
,
¬¬B C
AppDbContext
¬¬D P
db
¬¬Q S
,
¬¬S T
int
¬¬U X
page
¬¬Y ]
=
¬¬^ _
$num
¬¬` a
,
¬¬a b
int
¬¬c f
pageSize
¬¬g o
=
¬¬p q
$num
¬¬r t
)
¬¬t u
{
√√ 
var
ƒƒ 
(
ƒƒ 
	validPage
ƒƒ 
,
ƒƒ 
validPageSize
ƒƒ %
)
ƒƒ% &
=
ƒƒ' (
	ApiHelper
ƒƒ) 2
.
ƒƒ2 3 
ValidatePagination
ƒƒ3 E
(
ƒƒE F
page
ƒƒF J
,
ƒƒJ K
pageSize
ƒƒL T
)
ƒƒT U
;
ƒƒU V
var
≈≈ 
total
≈≈ 
=
≈≈ 
await
≈≈ 
db
≈≈ 
.
≈≈ 
Usuarios
≈≈ %
.
≈≈% &
LongCountAsync
≈≈& 4
(
≈≈4 5
)
≈≈5 6
;
≈≈6 7
var
∆∆ 
items
∆∆ 
=
∆∆ 
await
∆∆ 
db
∆∆ 
.
∆∆ 
Usuarios
∆∆ %
.
«« 
OrderBy
«« 
(
«« 
u
«« 
=>
«« 
u
«« 
.
«« 
Id
«« 
)
«« 
.
»» 
Skip
»» 
(
»» 
(
»» 
	validPage
»» 
-
»» 
$num
»»  
)
»»  !
*
»»" #
validPageSize
»»$ 1
)
»»1 2
.
…… 
Take
…… 
(
…… 
validPageSize
…… 
)
……  
.
   
Select
   
(
   
u
   
=>
   
new
   
{
   
u
    
.
    !
Id
  ! #
,
  # $
Usuario
  % ,
=
  - .
u
  / 0
.
  0 1
NomeUsuario
  1 <
}
  = >
)
  > ?
.
ÀÀ 
ToListAsync
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
return
ÕÕ 
TypedResults
ÕÕ 
.
ÕÕ 
Ok
ÕÕ 
(
ÕÕ 
	ApiHelper
ÕÕ (
.
ÕÕ( )
ToPaged
ÕÕ) 0
(
ÕÕ0 1
ctx
ÕÕ1 4
,
ÕÕ4 5
items
ÕÕ6 ;
,
ÕÕ; <
	validPage
ÕÕ= F
,
ÕÕF G
validPageSize
ÕÕH U
,
ÕÕU V
total
ÕÕW \
,
ÕÕ\ ]
$str
ÕÕ^ m
)
ÕÕm n
)
ÕÕn o
;
ÕÕo p
}
ŒŒ 
private
–– 
static
–– 
async
–– 
Task
–– 
<
–– 
IResult
–– %
>
––% &
GetUsuarioById
––' 5
(
––5 6
AppDbContext
––6 B
db
––C E
,
––E F
decimal
––G N
id
––O Q
)
––Q R
{
—— 
var
““ 
u
““ 
=
““ 
await
““ 
db
““ 
.
““ 
Usuarios
““ !
.
““! "
	FindAsync
““" +
(
““+ ,
id
““, .
)
““. /
;
““/ 0
if
”” 

(
”” 
u
”” 
is
”” 
null
”” 
)
”” 
return
”” 
TypedResults
”” *
.
””* +
NotFound
””+ 3
(
””3 4
)
””4 5
;
””5 6
return
‘‘ 
TypedResults
‘‘ 
.
‘‘ 
Ok
‘‘ 
(
‘‘ 
new
‘‘ "
{
‘‘# $
u
‘‘% &
.
‘‘& '
Id
‘‘' )
,
‘‘) *
Usuario
‘‘+ 2
=
‘‘3 4
u
‘‘5 6
.
‘‘6 7
NomeUsuario
‘‘7 B
}
‘‘C D
)
‘‘D E
;
‘‘E F
}
’’ 
private
◊◊ 
static
◊◊ 
async
◊◊ 
Task
◊◊ 
<
◊◊ 
IResult
◊◊ %
>
◊◊% &
CreateUsuario
◊◊' 4
(
◊◊4 5
AppDbContext
◊◊5 A
db
◊◊B D
,
◊◊D E
UsuarioCreateDto
◊◊F V
dto
◊◊W Z
)
◊◊Z [
{
ÿÿ 
if
ŸŸ 

(
ŸŸ 
await
ŸŸ 
db
ŸŸ 
.
ŸŸ 
Usuarios
ŸŸ 
.
ŸŸ 
AnyAsync
ŸŸ &
(
ŸŸ& '
x
ŸŸ' (
=>
ŸŸ) +
x
ŸŸ, -
.
ŸŸ- .
NomeUsuario
ŸŸ. 9
==
ŸŸ: <
dto
ŸŸ= @
.
ŸŸ@ A
Usuario
ŸŸA H
)
ŸŸH I
)
ŸŸI J
return
⁄⁄ 
TypedResults
⁄⁄ 
.
⁄⁄  

BadRequest
⁄⁄  *
(
⁄⁄* +
$str
⁄⁄+ ?
)
⁄⁄? @
;
⁄⁄@ A
var
‹‹ 
entity
‹‹ 
=
‹‹ 
new
‹‹ 
Usuario
‹‹  
{
›› 	
Id
ﬁﬁ 
=
ﬁﬁ 
await
ﬁﬁ 
	ApiHelper
ﬁﬁ  
.
ﬁﬁ  !
NextIdAsync
ﬁﬁ! ,
(
ﬁﬁ, -
db
ﬁﬁ- /
,
ﬁﬁ/ 0
$str
ﬁﬁ1 :
)
ﬁﬁ: ;
,
ﬁﬁ; <
NomeUsuario
ﬂﬂ 
=
ﬂﬂ 
dto
ﬂﬂ 
.
ﬂﬂ 
Usuario
ﬂﬂ %
,
ﬂﬂ% &
	SenhaHash
‡‡ 
=
‡‡ 
dto
‡‡ 
.
‡‡ 
Senha
‡‡ !
}
·· 	
;
··	 

db
„„ 

.
„„
 
Usuarios
„„ 
.
„„ 
Add
„„ 
(
„„ 
entity
„„ 
)
„„ 
;
„„  
await
‰‰ 
db
‰‰ 
.
‰‰ 
SaveChangesAsync
‰‰ !
(
‰‰! "
)
‰‰" #
;
‰‰# $
return
ÂÂ 
TypedResults
ÂÂ 
.
ÂÂ 
Created
ÂÂ #
(
ÂÂ# $
$"
ÂÂ$ &
$str
ÂÂ& 4
{
ÂÂ4 5
entity
ÂÂ5 ;
.
ÂÂ; <
Id
ÂÂ< >
}
ÂÂ> ?
"
ÂÂ? @
,
ÂÂ@ A
entity
ÂÂB H
)
ÂÂH I
;
ÂÂI J
}
ÊÊ 
private
ËË 
static
ËË 
async
ËË 
Task
ËË 
<
ËË 
IResult
ËË %
>
ËË% &
UpdateUsuario
ËË' 4
(
ËË4 5
AppDbContext
ËË5 A
db
ËËB D
,
ËËD E
decimal
ËËF M
id
ËËN P
,
ËËP Q
UsuarioUpdateDto
ËËR b
dto
ËËc f
)
ËËf g
{
ÈÈ 
var
ÍÍ 
u
ÍÍ 
=
ÍÍ 
await
ÍÍ 
db
ÍÍ 
.
ÍÍ 
Usuarios
ÍÍ !
.
ÍÍ! "
	FindAsync
ÍÍ" +
(
ÍÍ+ ,
id
ÍÍ, .
)
ÍÍ. /
;
ÍÍ/ 0
if
ÎÎ 

(
ÎÎ 
u
ÎÎ 
is
ÎÎ 
null
ÎÎ 
)
ÎÎ 
return
ÎÎ 
TypedResults
ÎÎ *
.
ÎÎ* +
NotFound
ÎÎ+ 3
(
ÎÎ3 4
)
ÎÎ4 5
;
ÎÎ5 6
if
ÌÌ 

(
ÌÌ 
await
ÌÌ 
db
ÌÌ 
.
ÌÌ 
Usuarios
ÌÌ 
.
ÌÌ 
AnyAsync
ÌÌ &
(
ÌÌ& '
x
ÌÌ' (
=>
ÌÌ) +
x
ÌÌ, -
.
ÌÌ- .
NomeUsuario
ÌÌ. 9
==
ÌÌ: <
dto
ÌÌ= @
.
ÌÌ@ A
Usuario
ÌÌA H
&&
ÌÌI K
x
ÌÌL M
.
ÌÌM N
Id
ÌÌN P
!=
ÌÌQ S
id
ÌÌT V
)
ÌÌV W
)
ÌÌW X
return
ÓÓ 
TypedResults
ÓÓ 
.
ÓÓ  

BadRequest
ÓÓ  *
(
ÓÓ* +
$str
ÓÓ+ S
)
ÓÓS T
;
ÓÓT U
u
 	
.
	 

NomeUsuario

 
=
 
dto
 
.
 
Usuario
 #
;
# $
u
ÒÒ 	
.
ÒÒ	 

	SenhaHash
ÒÒ
 
=
ÒÒ 
dto
ÒÒ 
.
ÒÒ 
Senha
ÒÒ 
;
ÒÒ  
await
ÚÚ 
db
ÚÚ 
.
ÚÚ 
SaveChangesAsync
ÚÚ !
(
ÚÚ! "
)
ÚÚ" #
;
ÚÚ# $
return
ÛÛ 
TypedResults
ÛÛ 
.
ÛÛ 
Ok
ÛÛ 
(
ÛÛ 
new
ÛÛ "
{
ÛÛ# $
u
ÛÛ% &
.
ÛÛ& '
Id
ÛÛ' )
,
ÛÛ) *
Usuario
ÛÛ+ 2
=
ÛÛ3 4
u
ÛÛ5 6
.
ÛÛ6 7
NomeUsuario
ÛÛ7 B
}
ÛÛC D
)
ÛÛD E
;
ÛÛE F
}
ÙÙ 
private
ˆˆ 
static
ˆˆ 
async
ˆˆ 
Task
ˆˆ 
<
ˆˆ 
IResult
ˆˆ %
>
ˆˆ% &
DeleteUsuario
ˆˆ' 4
(
ˆˆ4 5
AppDbContext
ˆˆ5 A
db
ˆˆB D
,
ˆˆD E
decimal
ˆˆF M
id
ˆˆN P
)
ˆˆP Q
{
˜˜ 
var
¯¯ 
u
¯¯ 
=
¯¯ 
await
¯¯ 
db
¯¯ 
.
¯¯ 
Usuarios
¯¯ !
.
¯¯! "
	FindAsync
¯¯" +
(
¯¯+ ,
id
¯¯, .
)
¯¯. /
;
¯¯/ 0
if
˘˘ 

(
˘˘ 
u
˘˘ 
is
˘˘ 
null
˘˘ 
)
˘˘ 
return
˘˘ 
TypedResults
˘˘ *
.
˘˘* +
NotFound
˘˘+ 3
(
˘˘3 4
)
˘˘4 5
;
˘˘5 6
db
˚˚ 

.
˚˚
 
Usuarios
˚˚ 
.
˚˚ 
Remove
˚˚ 
(
˚˚ 
u
˚˚ 
)
˚˚ 
;
˚˚ 
await
¸¸ 
db
¸¸ 
.
¸¸ 
SaveChangesAsync
¸¸ !
(
¸¸! "
)
¸¸" #
;
¸¸# $
return
˝˝ 
TypedResults
˝˝ 
.
˝˝ 
	NoContent
˝˝ %
(
˝˝% &
)
˝˝& '
;
˝˝' (
}
˛˛ 
}ˇˇ 
publicÅÅ 
static
ÅÅ 
class
ÅÅ 
ZonaEndpoints
ÅÅ !
{ÇÇ 
public
ÉÉ 

static
ÉÉ 
void
ÉÉ 
	Configure
ÉÉ  
(
ÉÉ  !
WebApplication
ÉÉ! /
app
ÉÉ0 3
)
ÉÉ3 4
{
ÑÑ 
var
ÖÖ 
zonas
ÖÖ 
=
ÖÖ 
app
ÖÖ 
.
ÖÖ 
MapGroup
ÖÖ  
(
ÖÖ  !
$str
ÖÖ! -
)
ÖÖ- .
.
ÖÖ. /
WithTags
ÖÖ/ 7
(
ÖÖ7 8
$str
ÖÖ8 ?
)
ÖÖ? @
;
ÖÖ@ A
zonas
áá 
.
áá 
MapGet
áá 
(
áá 
$str
áá 
,
áá 
GetZonas
áá "
)
áá" #
.
àà 
WithOpenApi
àà 
(
àà 
op
àà 
=>
àà 
{
ââ 
op
ää 
.
ää 
Summary
ää 
=
ää 
$str
ää 5
;
ää5 6
op
ãã 
.
ãã 
	Responses
ãã 
[
ãã 
$str
ãã "
]
ãã" #
=
ãã$ %
new
ãã& )
OpenApiResponse
ãã* 9
{
åå 
Description
çç 
=
çç  !
$str
çç" ;
,
çç; <
Content
éé 
=
éé 
new
éé !

Dictionary
éé" ,
<
éé, -
string
éé- 3
,
éé3 4
OpenApiMediaType
éé5 E
>
ééE F
{
èè 
[
êê 
$str
êê +
]
êê+ ,
=
êê- .
new
êê/ 2
OpenApiMediaType
êê3 C
{
ëë 
Example
íí #
=
íí$ %
new
íí& )
OpenApiString
íí* 7
(
íí7 8
$str
íî8 
)
îî  
}
ïï 
}
ññ 
}
óó 
;
óó 
return
òò 
op
òò 
;
òò 
}
ôô 
)
ôô 
;
ôô 
zonas
õõ 
.
õõ 
MapGet
õõ 
(
õõ 
$str
õõ $
,
õõ$ %
GetZonaById
õõ& 1
)
õõ1 2
.
úú 
WithOpenApi
úú 
(
úú 
op
úú 
=>
úú 
{
ùù 
op
ûû 
.
ûû 
Summary
ûû 
=
ûû 
$str
ûû 0
;
ûû0 1
op
üü 
.
üü 
	Responses
üü 
[
üü 
$str
üü "
]
üü" #
=
üü$ %
new
üü& )
OpenApiResponse
üü* 9
{
†† 
Description
°° 
=
°°  !
$str
°°" 3
,
°°3 4
Content
¢¢ 
=
¢¢ 
new
¢¢ !

Dictionary
¢¢" ,
<
¢¢, -
string
¢¢- 3
,
¢¢3 4
OpenApiMediaType
¢¢5 E
>
¢¢E F
{
££ 
[
§§ 
$str
§§ +
]
§§+ ,
=
§§- .
new
§§/ 2
OpenApiMediaType
§§3 C
{
•• 
Example
¶¶ #
=
¶¶$ %
new
¶¶& )
OpenApiString
¶¶* 7
(
¶¶7 8
$str
¶¶8 j
)
¶¶j k
}
ßß 
}
®® 
}
©© 
;
©© 
op
™™ 
.
™™ 
	Responses
™™ 
[
™™ 
$str
™™ "
]
™™" #
=
™™$ %
new
™™& )
OpenApiResponse
™™* 9
{
™™: ;
Description
™™< G
=
™™H I
$str
™™J _
}
™™` a
;
™™a b
return
´´ 
op
´´ 
;
´´ 
}
¨¨ 
)
¨¨ 
;
¨¨ 
zonas
ÆÆ 
.
ÆÆ 
MapPost
ÆÆ 
(
ÆÆ 
$str
ÆÆ 
,
ÆÆ 

CreateZona
ÆÆ %
)
ÆÆ% &
.
ØØ 
WithOpenApi
ØØ 
(
ØØ 
op
ØØ 
=>
ØØ 
{
∞∞ 
op
±± 
.
±± 
Summary
±± 
=
±± 
$str
±± (
;
±±( )
op
≤≤ 
.
≤≤ 
RequestBody
≤≤ 
=
≤≤  
new
≤≤! $ 
OpenApiRequestBody
≤≤% 7
{
≥≥ 
Content
¥¥ 
=
¥¥ 
new
¥¥ !

Dictionary
¥¥" ,
<
¥¥, -
string
¥¥- 3
,
¥¥3 4
OpenApiMediaType
¥¥5 E
>
¥¥E F
{
µµ 
[
∂∂ 
$str
∂∂ +
]
∂∂+ ,
=
∂∂- .
new
∂∂/ 2
OpenApiMediaType
∂∂3 C
{
∑∑ 
Example
∏∏ #
=
∏∏$ %
new
∏∏& )
OpenApiString
∏∏* 7
(
∏∏7 8
$str
∏∏8 b
)
∏∏b c
}
ππ 
}
∫∫ 
}
ªª 
;
ªª 
op
ºº 
.
ºº 
	Responses
ºº 
[
ºº 
$str
ºº "
]
ºº" #
=
ºº$ %
new
ºº& )
OpenApiResponse
ºº* 9
{
ΩΩ 
Description
ææ 
=
ææ  !
$str
ææ" /
,
ææ/ 0
Content
øø 
=
øø 
new
øø !

Dictionary
øø" ,
<
øø, -
string
øø- 3
,
øø3 4
OpenApiMediaType
øø5 E
>
øøE F
{
¿¿ 
[
¡¡ 
$str
¡¡ +
]
¡¡+ ,
=
¡¡- .
new
¡¡/ 2
OpenApiMediaType
¡¡3 C
{
¬¬ 
Example
√√ #
=
√√$ %
new
√√& )
OpenApiString
√√* 7
(
√√7 8
$str
√√8 j
)
√√j k
}
ƒƒ 
}
≈≈ 
}
∆∆ 
;
∆∆ 
op
«« 
.
«« 
	Responses
«« 
[
«« 
$str
«« "
]
««" #
=
««$ %
new
««& )
OpenApiResponse
««* 9
{
««: ;
Description
««< G
=
««H I
$str
««J ]
}
««^ _
;
««_ `
return
»» 
op
»» 
;
»» 
}
…… 
)
…… 
;
…… 
zonas
ÀÀ 
.
ÀÀ 
MapPut
ÀÀ 
(
ÀÀ 
$str
ÀÀ $
,
ÀÀ$ %

UpdateZona
ÀÀ& 0
)
ÀÀ0 1
.
ÃÃ 
WithOpenApi
ÃÃ 
(
ÃÃ 
op
ÃÃ 
=>
ÃÃ 
{
ÕÕ 
op
ŒŒ 
.
ŒŒ 
Summary
ŒŒ 
=
ŒŒ 
$str
ŒŒ ,
;
ŒŒ, -
op
œœ 
.
œœ 
RequestBody
œœ 
=
œœ  
new
œœ! $ 
OpenApiRequestBody
œœ% 7
{
–– 
Content
—— 
=
—— 
new
—— !

Dictionary
——" ,
<
——, -
string
——- 3
,
——3 4
OpenApiMediaType
——5 E
>
——E F
{
““ 
[
”” 
$str
”” +
]
””+ ,
=
””- .
new
””/ 2
OpenApiMediaType
””3 C
{
‘‘ 
Example
’’ #
=
’’$ %
new
’’& )
OpenApiString
’’* 7
(
’’7 8
$str
’’8 m
)
’’m n
}
÷÷ 
}
◊◊ 
}
ÿÿ 
;
ÿÿ 
op
ŸŸ 
.
ŸŸ 
	Responses
ŸŸ 
[
ŸŸ 
$str
ŸŸ "
]
ŸŸ" #
=
ŸŸ$ %
new
ŸŸ& )
OpenApiResponse
ŸŸ* 9
{
⁄⁄ 
Description
€€ 
=
€€  !
$str
€€" 3
,
€€3 4
Content
‹‹ 
=
‹‹ 
new
‹‹ !

Dictionary
‹‹" ,
<
‹‹, -
string
‹‹- 3
,
‹‹3 4
OpenApiMediaType
‹‹5 E
>
‹‹E F
{
›› 
[
ﬁﬁ 
$str
ﬁﬁ +
]
ﬁﬁ+ ,
=
ﬁﬁ- .
new
ﬁﬁ/ 2
OpenApiMediaType
ﬁﬁ3 C
{
ﬂﬂ 
Example
‡‡ #
=
‡‡$ %
new
‡‡& )
OpenApiString
‡‡* 7
(
‡‡7 8
$str
‡‡8 u
)
‡‡u v
}
·· 
}
‚‚ 
}
„„ 
;
„„ 
op
‰‰ 
.
‰‰ 
	Responses
‰‰ 
[
‰‰ 
$str
‰‰ "
]
‰‰" #
=
‰‰$ %
new
‰‰& )
OpenApiResponse
‰‰* 9
{
‰‰: ;
Description
‰‰< G
=
‰‰H I
$str
‰‰J ]
}
‰‰^ _
;
‰‰_ `
op
ÂÂ 
.
ÂÂ 
	Responses
ÂÂ 
[
ÂÂ 
$str
ÂÂ "
]
ÂÂ" #
=
ÂÂ$ %
new
ÂÂ& )
OpenApiResponse
ÂÂ* 9
{
ÂÂ: ;
Description
ÂÂ< G
=
ÂÂH I
$str
ÂÂJ _
}
ÂÂ` a
;
ÂÂa b
return
ÊÊ 
op
ÊÊ 
;
ÊÊ 
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
zonas
ÈÈ 
.
ÈÈ 
	MapDelete
ÈÈ 
(
ÈÈ 
$str
ÈÈ '
,
ÈÈ' (

DeleteZona
ÈÈ) 3
)
ÈÈ3 4
.
ÍÍ 
WithOpenApi
ÍÍ 
(
ÍÍ 
op
ÍÍ 
=>
ÍÍ 
{
ÎÎ 
op
ÏÏ 
.
ÏÏ 
Summary
ÏÏ 
=
ÏÏ 
$str
ÏÏ *
;
ÏÏ* +
op
ÌÌ 
.
ÌÌ 
	Responses
ÌÌ 
[
ÌÌ 
$str
ÌÌ "
]
ÌÌ" #
=
ÌÌ$ %
new
ÌÌ& )
OpenApiResponse
ÌÌ* 9
{
ÌÌ: ;
Description
ÌÌ< G
=
ÌÌH I
$str
ÌÌJ Y
}
ÌÌZ [
;
ÌÌ[ \
op
ÓÓ 
.
ÓÓ 
	Responses
ÓÓ 
[
ÓÓ 
$str
ÓÓ "
]
ÓÓ" #
=
ÓÓ$ %
new
ÓÓ& )
OpenApiResponse
ÓÓ* 9
{
ÓÓ: ;
Description
ÓÓ< G
=
ÓÓH I
$str
ÓÓJ _
}
ÓÓ` a
;
ÓÓa b
return
ÔÔ 
op
ÔÔ 
;
ÔÔ 
}
 
)
 
;
 
}
ÒÒ 
private
ÛÛ 
static
ÛÛ 
async
ÛÛ 
Task
ÛÛ 
<
ÛÛ 
IResult
ÛÛ %
>
ÛÛ% &
GetZonas
ÛÛ' /
(
ÛÛ/ 0
HttpContext
ÛÛ0 ;
ctx
ÛÛ< ?
,
ÛÛ? @
AppDbContext
ÛÛA M
db
ÛÛN P
,
ÛÛP Q
int
ÛÛR U
page
ÛÛV Z
=
ÛÛ[ \
$num
ÛÛ] ^
,
ÛÛ^ _
int
ÛÛ` c
pageSize
ÛÛd l
=
ÛÛm n
$num
ÛÛo q
)
ÛÛq r
{
ÙÙ 
var
ıı 
total
ıı 
=
ıı 
await
ıı 
db
ıı 
.
ıı 
Zonas
ıı "
.
ıı" #
LongCountAsync
ıı# 1
(
ıı1 2
)
ıı2 3
;
ıı3 4
var
ˆˆ 
items
ˆˆ 
=
ˆˆ 
await
ˆˆ 
db
ˆˆ 
.
ˆˆ 
Zonas
ˆˆ "
.
˜˜ 
OrderBy
˜˜ 
(
˜˜ 
z
˜˜ 
=>
˜˜ 
z
˜˜ 
.
˜˜ 
Id
˜˜ 
)
˜˜ 
.
¯¯ 
Skip
¯¯ 
(
¯¯ 
(
¯¯ 
page
¯¯ 
-
¯¯ 
$num
¯¯ 
)
¯¯ 
*
¯¯ 
pageSize
¯¯ '
)
¯¯' (
.
˘˘ 
Take
˘˘ 
(
˘˘ 
pageSize
˘˘ 
)
˘˘ 
.
˙˙ 
ToListAsync
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
return
¸¸ 
TypedResults
¸¸ 
.
¸¸ 
Ok
¸¸ 
(
¸¸ 
	ApiHelper
¸¸ (
.
¸¸( )
ToPaged
¸¸) 0
(
¸¸0 1
ctx
¸¸1 4
,
¸¸4 5
items
¸¸6 ;
,
¸¸; <
page
¸¸= A
,
¸¸A B
pageSize
¸¸C K
,
¸¸K L
total
¸¸M R
,
¸¸R S
$str
¸¸T `
)
¸¸` a
)
¸¸a b
;
¸¸b c
}
˝˝ 
private
ˇˇ 
static
ˇˇ 
async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
IResult
ˇˇ %
>
ˇˇ% &
GetZonaById
ˇˇ' 2
(
ˇˇ2 3
AppDbContext
ˇˇ3 ?
db
ˇˇ@ B
,
ˇˇB C
decimal
ˇˇD K
id
ˇˇL N
)
ˇˇN O
{
ÄÄ 
var
ÅÅ 
z
ÅÅ 
=
ÅÅ 
await
ÅÅ 
db
ÅÅ 
.
ÅÅ 
Zonas
ÅÅ 
.
ÅÅ 
	FindAsync
ÅÅ (
(
ÅÅ( )
id
ÅÅ) +
)
ÅÅ+ ,
;
ÅÅ, -
if
ÇÇ 

(
ÇÇ 
z
ÇÇ 
is
ÇÇ 
null
ÇÇ 
)
ÇÇ 
return
ÇÇ 
TypedResults
ÇÇ *
.
ÇÇ* +
NotFound
ÇÇ+ 3
(
ÇÇ3 4
)
ÇÇ4 5
;
ÇÇ5 6
return
ÉÉ 
TypedResults
ÉÉ 
.
ÉÉ 
Ok
ÉÉ 
(
ÉÉ 
z
ÉÉ  
)
ÉÉ  !
;
ÉÉ! "
}
ÑÑ 
private
ÜÜ 
static
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
IResult
ÜÜ %
>
ÜÜ% &

CreateZona
ÜÜ' 1
(
ÜÜ1 2
AppDbContext
ÜÜ2 >
db
ÜÜ? A
,
ÜÜA B
ZonaCreateDto
ÜÜC P
dto
ÜÜQ T
)
ÜÜT U
{
áá 
if
àà 

(
àà 
string
àà 
.
àà  
IsNullOrWhiteSpace
àà %
(
àà% &
dto
àà& )
.
àà) *
Nome
àà* .
)
àà. /
||
àà0 2
dto
àà3 6
.
àà6 7
Letra
àà7 <
?
àà< =
.
àà= >
Length
àà> D
!=
ààE G
$num
ààH I
)
ààI J
return
ââ 
TypedResults
ââ 
.
ââ  

BadRequest
ââ  *
(
ââ* +
$str
ââ+ [
)
ââ[ \
;
ââ\ ]
var
ãã 
entity
ãã 
=
ãã 
new
ãã 
Zona
ãã 
{
åå 	
Id
çç 
=
çç 
await
çç 
	ApiHelper
çç  
.
çç  !
NextIdAsync
çç! ,
(
çç, -
db
çç- /
,
çç/ 0
$str
çç1 7
)
çç7 8
,
çç8 9
Nome
éé 
=
éé 
dto
éé 
.
éé 
Nome
éé 
,
éé 
Letra
èè 
=
èè 
dto
èè 
.
èè 
Letra
èè 
!
èè 
}
êê 	
;
êê	 

db
íí 

.
íí
 
Zonas
íí 
.
íí 
Add
íí 
(
íí 
entity
íí 
)
íí 
;
íí 
await
ìì 
db
ìì 
.
ìì 
SaveChangesAsync
ìì !
(
ìì! "
)
ìì" #
;
ìì# $
return
îî 
TypedResults
îî 
.
îî 
Created
îî #
(
îî# $
$"
îî$ &
$str
îî& 1
{
îî1 2
entity
îî2 8
.
îî8 9
Id
îî9 ;
}
îî; <
"
îî< =
,
îî= >
entity
îî? E
)
îîE F
;
îîF G
}
ïï 
private
óó 
static
óó 
async
óó 
Task
óó 
<
óó 
IResult
óó %
>
óó% &

UpdateZona
óó' 1
(
óó1 2
AppDbContext
óó2 >
db
óó? A
,
óóA B
decimal
óóC J
id
óóK M
,
óóM N
ZonaUpdateDto
óóO \
dto
óó] `
)
óó` a
{
òò 
var
ôô 
z
ôô 
=
ôô 
await
ôô 
db
ôô 
.
ôô 
Zonas
ôô 
.
ôô 
	FindAsync
ôô (
(
ôô( )
id
ôô) +
)
ôô+ ,
;
ôô, -
if
öö 

(
öö 
z
öö 
is
öö 
null
öö 
)
öö 
return
öö 
TypedResults
öö *
.
öö* +
NotFound
öö+ 3
(
öö3 4
)
öö4 5
;
öö5 6
if
úú 

(
úú 
string
úú 
.
úú  
IsNullOrWhiteSpace
úú %
(
úú% &
dto
úú& )
.
úú) *
Nome
úú* .
)
úú. /
||
úú0 2
dto
úú3 6
.
úú6 7
Letra
úú7 <
?
úú< =
.
úú= >
Length
úú> D
!=
úúE G
$num
úúH I
)
úúI J
return
ùù 
TypedResults
ùù 
.
ùù  

BadRequest
ùù  *
(
ùù* +
$str
ùù+ [
)
ùù[ \
;
ùù\ ]
z
üü 	
.
üü	 

Nome
üü
 
=
üü 
dto
üü 
.
üü 
Nome
üü 
;
üü 
z
†† 	
.
††	 

Letra
††
 
=
†† 
dto
†† 
.
†† 
Letra
†† 
!
†† 
;
†† 
await
°° 
db
°° 
.
°° 
SaveChangesAsync
°° !
(
°°! "
)
°°" #
;
°°# $
return
¢¢ 
TypedResults
¢¢ 
.
¢¢ 
Ok
¢¢ 
(
¢¢ 
z
¢¢  
)
¢¢  !
;
¢¢! "
}
££ 
private
•• 
static
•• 
async
•• 
Task
•• 
<
•• 
IResult
•• %
>
••% &

DeleteZona
••' 1
(
••1 2
AppDbContext
••2 >
db
••? A
,
••A B
decimal
••C J
id
••K M
)
••M N
{
¶¶ 
var
ßß 
z
ßß 
=
ßß 
await
ßß 
db
ßß 
.
ßß 
Zonas
ßß 
.
ßß 
	FindAsync
ßß (
(
ßß( )
id
ßß) +
)
ßß+ ,
;
ßß, -
if
®® 

(
®® 
z
®® 
is
®® 
null
®® 
)
®® 
return
®® 
TypedResults
®® *
.
®®* +
NotFound
®®+ 3
(
®®3 4
)
®®4 5
;
®®5 6
db
™™ 

.
™™
 
Zonas
™™ 
.
™™ 
Remove
™™ 
(
™™ 
z
™™ 
)
™™ 
;
™™ 
await
´´ 
db
´´ 
.
´´ 
SaveChangesAsync
´´ !
(
´´! "
)
´´" #
;
´´# $
return
¨¨ 
TypedResults
¨¨ 
.
¨¨ 
	NoContent
¨¨ %
(
¨¨% &
)
¨¨& '
;
¨¨' (
}
≠≠ 
}ÆÆ 
public∞∞ 
static
∞∞ 
class
∞∞ 
MotoEndpoints
∞∞ !
{±± 
public
≤≤ 

static
≤≤ 
void
≤≤ 
	Configure
≤≤  
(
≤≤  !
WebApplication
≤≤! /
app
≤≤0 3
)
≤≤3 4
{
≥≥ 
var
¥¥ 
motos
¥¥ 
=
¥¥ 
app
¥¥ 
.
¥¥ 
MapGroup
¥¥  
(
¥¥  !
$str
¥¥! -
)
¥¥- .
.
¥¥. /
WithTags
¥¥/ 7
(
¥¥7 8
$str
¥¥8 ?
)
¥¥? @
;
¥¥@ A
motos
∂∂ 
.
∂∂ 
MapGet
∂∂ 
(
∂∂ 
$str
∂∂ 
,
∂∂ 
GetMotos
∂∂ "
)
∂∂" #
.
∑∑ 
WithOpenApi
∑∑ 
(
∑∑ 
op
∑∑ 
=>
∑∑ 
{
∏∏ 
op
ππ 
.
ππ 
Summary
ππ 
=
ππ 
$str
ππ G
;
ππG H
op
∫∫ 
.
∫∫ 
	Responses
∫∫ 
[
∫∫ 
$str
∫∫ "
]
∫∫" #
=
∫∫$ %
new
∫∫& )
OpenApiResponse
∫∫* 9
{
ªª 
Description
ºº 
=
ºº  !
$str
ºº" ;
,
ºº; <
Content
ΩΩ 
=
ΩΩ 
new
ΩΩ !

Dictionary
ΩΩ" ,
<
ΩΩ, -
string
ΩΩ- 3
,
ΩΩ3 4
OpenApiMediaType
ΩΩ5 E
>
ΩΩE F
{
ææ 
[
øø 
$str
øø +
]
øø+ ,
=
øø- .
new
øø/ 2
OpenApiMediaType
øø3 C
{
¿¿ 
Example
¡¡ #
=
¡¡$ %
new
¡¡& )
OpenApiString
¡¡* 7
(
¡¡7 8
$str
¡√8 
)
√√  
}
ƒƒ 
}
≈≈ 
}
∆∆ 
;
∆∆ 
return
«« 
op
«« 
;
«« 
}
»» 
)
»» 
;
»» 
motos
   
.
   
MapGet
   
(
   
$str
   $
,
  $ %
GetMotoById
  & 1
)
  1 2
.
ÀÀ 
WithOpenApi
ÀÀ 
(
ÀÀ 
op
ÀÀ 
=>
ÀÀ 
{
ÃÃ 
op
ÕÕ 
.
ÕÕ 
Summary
ÕÕ 
=
ÕÕ 
$str
ÕÕ 0
;
ÕÕ0 1
op
ŒŒ 
.
ŒŒ 
	Responses
ŒŒ 
[
ŒŒ 
$str
ŒŒ "
]
ŒŒ" #
=
ŒŒ$ %
new
ŒŒ& )
OpenApiResponse
ŒŒ* 9
{
œœ 
Description
–– 
=
––  !
$str
––" 3
,
––3 4
Content
—— 
=
—— 
new
—— !

Dictionary
——" ,
<
——, -
string
——- 3
,
——3 4
OpenApiMediaType
——5 E
>
——E F
{
““ 
[
”” 
$str
”” +
]
””+ ,
=
””- .
new
””/ 2
OpenApiMediaType
””3 C
{
‘‘ 
Example
’’ #
=
’’$ %
new
’’& )
OpenApiString
’’* 7
(
’’7 8
$str’’8 ß
)’’ß ®
}
÷÷ 
}
◊◊ 
}
ÿÿ 
;
ÿÿ 
op
ŸŸ 
.
ŸŸ 
	Responses
ŸŸ 
[
ŸŸ 
$str
ŸŸ "
]
ŸŸ" #
=
ŸŸ$ %
new
ŸŸ& )
OpenApiResponse
ŸŸ* 9
{
ŸŸ: ;
Description
ŸŸ< G
=
ŸŸH I
$str
ŸŸJ _
}
ŸŸ` a
;
ŸŸa b
return
⁄⁄ 
op
⁄⁄ 
;
⁄⁄ 
}
€€ 
)
€€ 
;
€€ 
motos
›› 
.
›› 
MapPost
›› 
(
›› 
$str
›› 
,
›› 

CreateMoto
›› %
)
››% &
.
ﬁﬁ 
WithOpenApi
ﬁﬁ 
(
ﬁﬁ 
op
ﬁﬁ 
=>
ﬁﬁ 
{
ﬂﬂ 
op
‡‡ 
.
‡‡ 
Summary
‡‡ 
=
‡‡ 
$str
‡‡ (
;
‡‡( )
op
·· 
.
·· 
RequestBody
·· 
=
··  
new
··! $ 
OpenApiRequestBody
··% 7
{
‚‚ 
Content
„„ 
=
„„ 
new
„„ !

Dictionary
„„" ,
<
„„, -
string
„„- 3
,
„„3 4
OpenApiMediaType
„„5 E
>
„„E F
{
‰‰ 
[
ÂÂ 
$str
ÂÂ +
]
ÂÂ+ ,
=
ÂÂ- .
new
ÂÂ/ 2
OpenApiMediaType
ÂÂ3 C
{
ÊÊ 
Example
ÁÁ #
=
ÁÁ$ %
new
ÁÁ& )
OpenApiString
ÁÁ* 7
(
ÁÁ7 8
$strÁÁ8 …
)ÁÁ…  
}
ËË 
}
ÈÈ 
}
ÍÍ 
;
ÍÍ 
op
ÎÎ 
.
ÎÎ 
	Responses
ÎÎ 
[
ÎÎ 
$str
ÎÎ "
]
ÎÎ" #
=
ÎÎ$ %
new
ÎÎ& )
OpenApiResponse
ÎÎ* 9
{
ÏÏ 
Description
ÌÌ 
=
ÌÌ  !
$str
ÌÌ" /
,
ÌÌ/ 0
Content
ÓÓ 
=
ÓÓ 
new
ÓÓ !

Dictionary
ÓÓ" ,
<
ÓÓ, -
string
ÓÓ- 3
,
ÓÓ3 4
OpenApiMediaType
ÓÓ5 E
>
ÓÓE F
{
ÔÔ 
[
 
$str
 +
]
+ ,
=
- .
new
/ 2
OpenApiMediaType
3 C
{
ÒÒ 
Example
ÚÚ #
=
ÚÚ$ %
new
ÚÚ& )
OpenApiString
ÚÚ* 7
(
ÚÚ7 8
$strÚÚ8 ≤
)ÚÚ≤ ≥
}
ÛÛ 
}
ÙÙ 
}
ıı 
;
ıı 
op
ˆˆ 
.
ˆˆ 
	Responses
ˆˆ 
[
ˆˆ 
$str
ˆˆ "
]
ˆˆ" #
=
ˆˆ$ %
new
ˆˆ& )
OpenApiResponse
ˆˆ* 9
{
ˆˆ: ;
Description
ˆˆ< G
=
ˆˆH I
$str
ˆˆJ ]
}
ˆˆ^ _
;
ˆˆ_ `
return
˜˜ 
op
˜˜ 
;
˜˜ 
}
¯¯ 
)
¯¯ 
;
¯¯ 
motos
˙˙ 
.
˙˙ 
MapPut
˙˙ 
(
˙˙ 
$str
˙˙ $
,
˙˙$ %

UpdateMoto
˙˙& 0
)
˙˙0 1
.
˚˚ 
WithOpenApi
˚˚ 
(
˚˚ 
op
˚˚ 
=>
˚˚ 
{
¸¸ 
op
˝˝ 
.
˝˝ 
Summary
˝˝ 
=
˝˝ 
$str
˝˝ ,
;
˝˝, -
op
˛˛ 
.
˛˛ 
RequestBody
˛˛ 
=
˛˛  
new
˛˛! $ 
OpenApiRequestBody
˛˛% 7
{
ˇˇ 
Content
ÄÄ 
=
ÄÄ 
new
ÄÄ !

Dictionary
ÄÄ" ,
<
ÄÄ, -
string
ÄÄ- 3
,
ÄÄ3 4
OpenApiMediaType
ÄÄ5 E
>
ÄÄE F
{
ÅÅ 
[
ÇÇ 
$str
ÇÇ +
]
ÇÇ+ ,
=
ÇÇ- .
new
ÇÇ/ 2
OpenApiMediaType
ÇÇ3 C
{
ÉÉ 
Example
ÑÑ #
=
ÑÑ$ %
new
ÑÑ& )
OpenApiString
ÑÑ* 7
(
ÑÑ7 8
$strÑÑ8 æ
)ÑÑæ ø
}
ÖÖ 
}
ÜÜ 
}
áá 
;
áá 
op
àà 
.
àà 
	Responses
àà 
[
àà 
$str
àà "
]
àà" #
=
àà$ %
new
àà& )
OpenApiResponse
àà* 9
{
ââ 
Description
ää 
=
ää  !
$str
ää" 3
,
ää3 4
Content
ãã 
=
ãã 
new
ãã !

Dictionary
ãã" ,
<
ãã, -
string
ãã- 3
,
ãã3 4
OpenApiMediaType
ãã5 E
>
ããE F
{
åå 
[
çç 
$str
çç +
]
çç+ ,
=
çç- .
new
çç/ 2
OpenApiMediaType
çç3 C
{
éé 
Example
èè #
=
èè$ %
new
èè& )
OpenApiString
èè* 7
(
èè7 8
$strèè8 ß
)èèß ®
}
êê 
}
ëë 
}
íí 
;
íí 
op
ìì 
.
ìì 
	Responses
ìì 
[
ìì 
$str
ìì "
]
ìì" #
=
ìì$ %
new
ìì& )
OpenApiResponse
ìì* 9
{
ìì: ;
Description
ìì< G
=
ììH I
$str
ììJ ]
}
ìì^ _
;
ìì_ `
op
îî 
.
îî 
	Responses
îî 
[
îî 
$str
îî "
]
îî" #
=
îî$ %
new
îî& )
OpenApiResponse
îî* 9
{
îî: ;
Description
îî< G
=
îîH I
$str
îîJ _
}
îî` a
;
îîa b
return
ïï 
op
ïï 
;
ïï 
}
ññ 
)
ññ 
;
ññ 
motos
òò 
.
òò 
	MapDelete
òò 
(
òò 
$str
òò '
,
òò' (

DeleteMoto
òò) 3
)
òò3 4
.
ôô 
WithOpenApi
ôô 
(
ôô 
op
ôô 
=>
ôô 
{
öö 
op
õõ 
.
õõ 
Summary
õõ 
=
õõ 
$str
õõ *
;
õõ* +
op
úú 
.
úú 
	Responses
úú 
[
úú 
$str
úú "
]
úú" #
=
úú$ %
new
úú& )
OpenApiResponse
úú* 9
{
úú: ;
Description
úú< G
=
úúH I
$str
úúJ Y
}
úúZ [
;
úú[ \
op
ùù 
.
ùù 
	Responses
ùù 
[
ùù 
$str
ùù "
]
ùù" #
=
ùù$ %
new
ùù& )
OpenApiResponse
ùù* 9
{
ùù: ;
Description
ùù< G
=
ùùH I
$str
ùùJ _
}
ùù` a
;
ùùa b
return
ûû 
op
ûû 
;
ûû 
}
üü 
)
üü 
;
üü 
}
†† 
private
¢¢ 
static
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
IResult
¢¢ %
>
¢¢% &
GetMotos
¢¢' /
(
¢¢/ 0
HttpContext
¢¢0 ;
ctx
¢¢< ?
,
¢¢? @
AppDbContext
¢¢A M
db
¢¢N P
,
¢¢P Q
int
¢¢R U
page
¢¢V Z
=
¢¢[ \
$num
¢¢] ^
,
¢¢^ _
int
¢¢` c
pageSize
¢¢d l
=
¢¢m n
$num
¢¢o q
,
¢¢q r
string
¢¢s y
?
¢¢y z
placa¢¢{ Ä
=¢¢Å Ç
null¢¢É á
)¢¢á à
{
££ 
var
§§ 
query
§§ 
=
§§ 
db
§§ 
.
§§ 
Motos
§§ 
.
§§ 
Include
§§ $
(
§§$ %
m
§§% &
=>
§§' )
m
§§* +
.
§§+ ,
Zona
§§, 0
)
§§0 1
.
§§1 2
Include
§§2 9
(
§§9 :
m
§§: ;
=>
§§< >
m
§§? @
.
§§@ A
Patio
§§A F
)
§§F G
.
§§G H
Include
§§H O
(
§§O P
m
§§P Q
=>
§§R T
m
§§U V
.
§§V W
Status
§§W ]
)
§§] ^
.
§§^ _
AsQueryable
§§_ j
(
§§j k
)
§§k l
;
§§l m
if
¶¶ 

(
¶¶ 
!
¶¶ 
string
¶¶ 
.
¶¶  
IsNullOrWhiteSpace
¶¶ &
(
¶¶& '
placa
¶¶' ,
)
¶¶, -
)
¶¶- .
query
ßß 
=
ßß 
query
ßß 
.
ßß 
Where
ßß 
(
ßß  
m
ßß  !
=>
ßß" $
m
ßß% &
.
ßß& '
Placa
ßß' ,
.
ßß, -
Contains
ßß- 5
(
ßß5 6
placa
ßß6 ;
,
ßß; <
StringComparison
ßß= M
.
ßßM N
OrdinalIgnoreCase
ßßN _
)
ßß_ `
)
ßß` a
;
ßßa b
var
©© 
total
©© 
=
©© 
await
©© 
query
©© 
.
©©  
LongCountAsync
©©  .
(
©©. /
)
©©/ 0
;
©©0 1
var
™™ 
items
™™ 
=
™™ 
await
™™ 
query
™™ 
.
´´ 
OrderBy
´´ 
(
´´ 
m
´´ 
=>
´´ 
m
´´ 
.
´´ 
Id
´´ 
)
´´ 
.
¨¨ 
Skip
¨¨ 
(
¨¨ 
(
¨¨ 
page
¨¨ 
-
¨¨ 
$num
¨¨ 
)
¨¨ 
*
¨¨ 
pageSize
¨¨ '
)
¨¨' (
.
≠≠ 
Take
≠≠ 
(
≠≠ 
pageSize
≠≠ 
)
≠≠ 
.
ÆÆ 
ToListAsync
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
return
∞∞ 
TypedResults
∞∞ 
.
∞∞ 
Ok
∞∞ 
(
∞∞ 
	ApiHelper
∞∞ (
.
∞∞( )
ToPaged
∞∞) 0
(
∞∞0 1
ctx
∞∞1 4
,
∞∞4 5
items
∞∞6 ;
,
∞∞; <
page
∞∞= A
,
∞∞A B
pageSize
∞∞C K
,
∞∞K L
total
∞∞M R
,
∞∞R S
$str
∞∞T `
)
∞∞` a
)
∞∞a b
;
∞∞b c
}
±± 
private
≥≥ 
static
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
IResult
≥≥ %
>
≥≥% &
GetMotoById
≥≥' 2
(
≥≥2 3
AppDbContext
≥≥3 ?
db
≥≥@ B
,
≥≥B C
decimal
≥≥D K
id
≥≥L N
)
≥≥N O
{
¥¥ 
var
µµ 
m
µµ 
=
µµ 
await
µµ 
db
µµ 
.
µµ 
Motos
µµ 
.
∂∂ 
Include
∂∂ 
(
∂∂ 
x
∂∂ 
=>
∂∂ 
x
∂∂ 
.
∂∂ 
Zona
∂∂  
)
∂∂  !
.
∑∑ 
Include
∑∑ 
(
∑∑ 
x
∑∑ 
=>
∑∑ 
x
∑∑ 
.
∑∑ 
Patio
∑∑ !
)
∑∑! "
.
∏∏ 
Include
∏∏ 
(
∏∏ 
x
∏∏ 
=>
∏∏ 
x
∏∏ 
.
∏∏ 
Status
∏∏ "
)
∏∏" #
.
ππ !
FirstOrDefaultAsync
ππ  
(
ππ  !
x
ππ! "
=>
ππ# %
x
ππ& '
.
ππ' (
Id
ππ( *
==
ππ+ -
id
ππ. 0
)
ππ0 1
;
ππ1 2
if
ªª 

(
ªª 
m
ªª 
is
ªª 
null
ªª 
)
ªª 
return
ªª 
TypedResults
ªª *
.
ªª* +
NotFound
ªª+ 3
(
ªª3 4
)
ªª4 5
;
ªª5 6
return
ºº 
TypedResults
ºº 
.
ºº 
Ok
ºº 
(
ºº 
m
ºº  
)
ºº  !
;
ºº! "
}
ΩΩ 
private
øø 
static
øø 
async
øø 
Task
øø 
<
øø 
IResult
øø %
>
øø% &

CreateMoto
øø' 1
(
øø1 2
AppDbContext
øø2 >
db
øø? A
,
øøA B
MotoCreateDto
øøC P
dto
øøQ T
)
øøT U
{
¿¿ 
var
¡¡ 
validationResult
¡¡ 
=
¡¡ 
await
¡¡ $#
ValidateMotoCreateDto
¡¡% :
(
¡¡: ;
db
¡¡; =
,
¡¡= >
dto
¡¡? B
)
¡¡B C
;
¡¡C D
if
¬¬ 

(
¬¬ 
validationResult
¬¬ 
!=
¬¬ 
null
¬¬  $
)
¬¬$ %
return
¬¬& ,
validationResult
¬¬- =
;
¬¬= >
var
ƒƒ 
entity
ƒƒ 
=
ƒƒ 
new
ƒƒ 
Moto
ƒƒ 
{
≈≈ 	
Id
∆∆ 
=
∆∆ 
await
∆∆ 
	ApiHelper
∆∆  
.
∆∆  !
NextIdAsync
∆∆! ,
(
∆∆, -
db
∆∆- /
,
∆∆/ 0
$str
∆∆1 7
)
∆∆7 8
,
∆∆8 9
Placa
«« 
=
«« 
dto
«« 
.
«« 
Placa
«« 
,
«« 
Chassi
»» 
=
»» 
dto
»» 
.
»» 
Chassi
»» 
,
»»  
QrCode
…… 
=
…… 
dto
…… 
.
…… 
QrCode
…… 
,
……  
DataEntrada
   
=
   
dto
   
.
   
DataEntrada
   )
,
  ) *
PrevisaoEntrega
ÀÀ 
=
ÀÀ 
dto
ÀÀ !
.
ÀÀ! "
PrevisaoEntrega
ÀÀ" 1
,
ÀÀ1 2
Fotos
ÃÃ 
=
ÃÃ 
dto
ÃÃ 
.
ÃÃ 
Fotos
ÃÃ 
,
ÃÃ 
ZonaId
ÕÕ 
=
ÕÕ 
dto
ÕÕ 
.
ÕÕ 
ZonaId
ÕÕ 
,
ÕÕ  
PatioId
ŒŒ 
=
ŒŒ 
dto
ŒŒ 
.
ŒŒ 
PatioId
ŒŒ !
,
ŒŒ! "
StatusId
œœ 
=
œœ 
dto
œœ 
.
œœ 
StatusId
œœ #
,
œœ# $
Observacoes
–– 
=
–– 
dto
–– 
.
–– 
Observacoes
–– )
}
—— 	
;
——	 

db
”” 

.
””
 
Motos
”” 
.
”” 
Add
”” 
(
”” 
entity
”” 
)
”” 
;
”” 
await
‘‘ 
db
‘‘ 
.
‘‘ 
SaveChangesAsync
‘‘ !
(
‘‘! "
)
‘‘" #
;
‘‘# $
return
’’ 
TypedResults
’’ 
.
’’ 
Created
’’ #
(
’’# $
$"
’’$ &
$str
’’& 1
{
’’1 2
entity
’’2 8
.
’’8 9
Id
’’9 ;
}
’’; <
"
’’< =
,
’’= >
entity
’’? E
)
’’E F
;
’’F G
}
÷÷ 
private
ÿÿ 
static
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
IResult
ÿÿ %
>
ÿÿ% &

UpdateMoto
ÿÿ' 1
(
ÿÿ1 2
AppDbContext
ÿÿ2 >
db
ÿÿ? A
,
ÿÿA B
decimal
ÿÿC J
id
ÿÿK M
,
ÿÿM N
MotoUpdateDto
ÿÿO \
dto
ÿÿ] `
)
ÿÿ` a
{
ŸŸ 
var
⁄⁄ 
m
⁄⁄ 
=
⁄⁄ 
await
⁄⁄ 
db
⁄⁄ 
.
⁄⁄ 
Motos
⁄⁄ 
.
⁄⁄ 
	FindAsync
⁄⁄ (
(
⁄⁄( )
id
⁄⁄) +
)
⁄⁄+ ,
;
⁄⁄, -
if
€€ 

(
€€ 
m
€€ 
is
€€ 
null
€€ 
)
€€ 
return
€€ 
TypedResults
€€ *
.
€€* +
NotFound
€€+ 3
(
€€3 4
)
€€4 5
;
€€5 6
var
›› 
validationResult
›› 
=
›› 
await
›› $#
ValidateMotoUpdateDto
››% :
(
››: ;
db
››; =
,
››= >
dto
››? B
,
››B C
id
››D F
)
››F G
;
››G H
if
ﬁﬁ 

(
ﬁﬁ 
validationResult
ﬁﬁ 
!=
ﬁﬁ 
null
ﬁﬁ  $
)
ﬁﬁ$ %
return
ﬁﬁ& ,
validationResult
ﬁﬁ- =
;
ﬁﬁ= >
m
‡‡ 	
.
‡‡	 

Placa
‡‡
 
=
‡‡ 
dto
‡‡ 
.
‡‡ 
Placa
‡‡ 
;
‡‡ 
m
·· 	
.
··	 

Chassi
··
 
=
·· 
dto
·· 
.
·· 
Chassi
·· 
;
·· 
m
‚‚ 	
.
‚‚	 

QrCode
‚‚
 
=
‚‚ 
dto
‚‚ 
.
‚‚ 
QrCode
‚‚ 
;
‚‚ 
m
„„ 	
.
„„	 

DataEntrada
„„
 
=
„„ 
dto
„„ 
.
„„ 
DataEntrada
„„ '
;
„„' (
m
‰‰ 	
.
‰‰	 

PrevisaoEntrega
‰‰
 
=
‰‰ 
dto
‰‰ 
.
‰‰  
PrevisaoEntrega
‰‰  /
;
‰‰/ 0
m
ÂÂ 	
.
ÂÂ	 

Fotos
ÂÂ
 
=
ÂÂ 
dto
ÂÂ 
.
ÂÂ 
Fotos
ÂÂ 
;
ÂÂ 
m
ÊÊ 	
.
ÊÊ	 

ZonaId
ÊÊ
 
=
ÊÊ 
dto
ÊÊ 
.
ÊÊ 
ZonaId
ÊÊ 
;
ÊÊ 
m
ÁÁ 	
.
ÁÁ	 

PatioId
ÁÁ
 
=
ÁÁ 
dto
ÁÁ 
.
ÁÁ 
PatioId
ÁÁ 
;
ÁÁ  
m
ËË 	
.
ËË	 

StatusId
ËË
 
=
ËË 
dto
ËË 
.
ËË 
StatusId
ËË !
;
ËË! "
m
ÈÈ 	
.
ÈÈ	 

Observacoes
ÈÈ
 
=
ÈÈ 
dto
ÈÈ 
.
ÈÈ 
Observacoes
ÈÈ '
;
ÈÈ' (
await
ÎÎ 
db
ÎÎ 
.
ÎÎ 
SaveChangesAsync
ÎÎ !
(
ÎÎ! "
)
ÎÎ" #
;
ÎÎ# $
return
ÏÏ 
TypedResults
ÏÏ 
.
ÏÏ 
Ok
ÏÏ 
(
ÏÏ 
m
ÏÏ  
)
ÏÏ  !
;
ÏÏ! "
}
ÌÌ 
private
ÔÔ 
static
ÔÔ 
async
ÔÔ 
Task
ÔÔ 
<
ÔÔ 
IResult
ÔÔ %
>
ÔÔ% &

DeleteMoto
ÔÔ' 1
(
ÔÔ1 2
AppDbContext
ÔÔ2 >
db
ÔÔ? A
,
ÔÔA B
decimal
ÔÔC J
id
ÔÔK M
)
ÔÔM N
{
 
var
ÒÒ 
m
ÒÒ 
=
ÒÒ 
await
ÒÒ 
db
ÒÒ 
.
ÒÒ 
Motos
ÒÒ 
.
ÒÒ 
	FindAsync
ÒÒ (
(
ÒÒ( )
id
ÒÒ) +
)
ÒÒ+ ,
;
ÒÒ, -
if
ÚÚ 

(
ÚÚ 
m
ÚÚ 
is
ÚÚ 
null
ÚÚ 
)
ÚÚ 
return
ÚÚ 
TypedResults
ÚÚ *
.
ÚÚ* +
NotFound
ÚÚ+ 3
(
ÚÚ3 4
)
ÚÚ4 5
;
ÚÚ5 6
db
ÙÙ 

.
ÙÙ
 
Motos
ÙÙ 
.
ÙÙ 
Remove
ÙÙ 
(
ÙÙ 
m
ÙÙ 
)
ÙÙ 
;
ÙÙ 
await
ıı 
db
ıı 
.
ıı 
SaveChangesAsync
ıı !
(
ıı! "
)
ıı" #
;
ıı# $
return
ˆˆ 
TypedResults
ˆˆ 
.
ˆˆ 
	NoContent
ˆˆ %
(
ˆˆ% &
)
ˆˆ& '
;
ˆˆ' (
}
˜˜ 
private
˘˘ 
static
˘˘ 
async
˘˘ 
Task
˘˘ 
<
˘˘ 
IResult
˘˘ %
?
˘˘% &
>
˘˘& '#
ValidateMotoCreateDto
˘˘( =
(
˘˘= >
AppDbContext
˘˘> J
db
˘˘K M
,
˘˘M N
MotoCreateDto
˘˘O \
dto
˘˘] `
)
˘˘` a
{
˙˙ 
if
˚˚ 

(
˚˚ 
!
˚˚ 
await
˚˚ 
db
˚˚ 
.
˚˚ 
Zonas
˚˚ 
.
˚˚ 
AnyAsync
˚˚ $
(
˚˚$ %
z
˚˚% &
=>
˚˚' )
z
˚˚* +
.
˚˚+ ,
Id
˚˚, .
==
˚˚/ 1
dto
˚˚2 5
.
˚˚5 6
ZonaId
˚˚6 <
)
˚˚< =
)
˚˚= >
return
¸¸ 
TypedResults
¸¸ 
.
¸¸  

BadRequest
¸¸  *
(
¸¸* +
$str
¸¸+ =
)
¸¸= >
;
¸¸> ?
if
˛˛ 

(
˛˛ 
!
˛˛ 
await
˛˛ 
db
˛˛ 
.
˛˛ 
Patios
˛˛ 
.
˛˛ 
AnyAsync
˛˛ %
(
˛˛% &
p
˛˛& '
=>
˛˛( *
p
˛˛+ ,
.
˛˛, -
Id
˛˛- /
==
˛˛0 2
dto
˛˛3 6
.
˛˛6 7
PatioId
˛˛7 >
)
˛˛> ?
)
˛˛? @
return
ˇˇ 
TypedResults
ˇˇ 
.
ˇˇ  

BadRequest
ˇˇ  *
(
ˇˇ* +
$str
ˇˇ+ >
)
ˇˇ> ?
;
ˇˇ? @
if
ÅÅ 

(
ÅÅ 
!
ÅÅ 
await
ÅÅ 
db
ÅÅ 
.
ÅÅ 
Statuses
ÅÅ 
.
ÅÅ 
AnyAsync
ÅÅ '
(
ÅÅ' (
s
ÅÅ( )
=>
ÅÅ* ,
s
ÅÅ- .
.
ÅÅ. /
Id
ÅÅ/ 1
==
ÅÅ2 4
dto
ÅÅ5 8
.
ÅÅ8 9
StatusId
ÅÅ9 A
)
ÅÅA B
)
ÅÅB C
return
ÇÇ 
TypedResults
ÇÇ 
.
ÇÇ  

BadRequest
ÇÇ  *
(
ÇÇ* +
$str
ÇÇ+ ?
)
ÇÇ? @
;
ÇÇ@ A
if
ÑÑ 

(
ÑÑ 
await
ÑÑ 
db
ÑÑ 
.
ÑÑ 
Motos
ÑÑ 
.
ÑÑ 
AnyAsync
ÑÑ #
(
ÑÑ# $
m
ÑÑ$ %
=>
ÑÑ& (
m
ÑÑ) *
.
ÑÑ* +
Placa
ÑÑ+ 0
==
ÑÑ1 3
dto
ÑÑ4 7
.
ÑÑ7 8
Placa
ÑÑ8 =
)
ÑÑ= >
)
ÑÑ> ?
return
ÖÖ 
TypedResults
ÖÖ 
.
ÖÖ  

BadRequest
ÖÖ  *
(
ÖÖ* +
$str
ÖÖ+ A
)
ÖÖA B
;
ÖÖB C
if
áá 

(
áá 
await
áá 
db
áá 
.
áá 
Motos
áá 
.
áá 
AnyAsync
áá #
(
áá# $
m
áá$ %
=>
áá& (
m
áá) *
.
áá* +
Chassi
áá+ 1
==
áá2 4
dto
áá5 8
.
áá8 9
Chassi
áá9 ?
)
áá? @
)
áá@ A
return
àà 
TypedResults
àà 
.
àà  

BadRequest
àà  *
(
àà* +
$str
àà+ B
)
ààB C
;
ààC D
return
ää 
null
ää 
;
ää 
}
ãã 
private
çç 
static
çç 
async
çç 
Task
çç 
<
çç 
IResult
çç %
?
çç% &
>
çç& '#
ValidateMotoUpdateDto
çç( =
(
çç= >
AppDbContext
çç> J
db
ççK M
,
ççM N
MotoUpdateDto
ççO \
dto
çç] `
,
çç` a
decimal
ççb i
	excludeId
ççj s
)
ççs t
{
éé 
if
èè 

(
èè 
!
èè 
await
èè 
db
èè 
.
èè 
Zonas
èè 
.
èè 
AnyAsync
èè $
(
èè$ %
z
èè% &
=>
èè' )
z
èè* +
.
èè+ ,
Id
èè, .
==
èè/ 1
dto
èè2 5
.
èè5 6
ZonaId
èè6 <
)
èè< =
)
èè= >
return
êê 
TypedResults
êê 
.
êê  

BadRequest
êê  *
(
êê* +
$str
êê+ =
)
êê= >
;
êê> ?
if
íí 

(
íí 
!
íí 
await
íí 
db
íí 
.
íí 
Patios
íí 
.
íí 
AnyAsync
íí %
(
íí% &
p
íí& '
=>
íí( *
p
íí+ ,
.
íí, -
Id
íí- /
==
íí0 2
dto
íí3 6
.
íí6 7
PatioId
íí7 >
)
íí> ?
)
íí? @
return
ìì 
TypedResults
ìì 
.
ìì  

BadRequest
ìì  *
(
ìì* +
$str
ìì+ >
)
ìì> ?
;
ìì? @
if
ïï 

(
ïï 
!
ïï 
await
ïï 
db
ïï 
.
ïï 
Statuses
ïï 
.
ïï 
AnyAsync
ïï '
(
ïï' (
s
ïï( )
=>
ïï* ,
s
ïï- .
.
ïï. /
Id
ïï/ 1
==
ïï2 4
dto
ïï5 8
.
ïï8 9
StatusId
ïï9 A
)
ïïA B
)
ïïB C
return
ññ 
TypedResults
ññ 
.
ññ  

BadRequest
ññ  *
(
ññ* +
$str
ññ+ ?
)
ññ? @
;
ññ@ A
if
òò 

(
òò 
await
òò 
db
òò 
.
òò 
Motos
òò 
.
òò 
AnyAsync
òò #
(
òò# $
m
òò$ %
=>
òò& (
m
òò) *
.
òò* +
Placa
òò+ 0
==
òò1 3
dto
òò4 7
.
òò7 8
Placa
òò8 =
&&
òò> @
m
òòA B
.
òòB C
Id
òòC E
!=
òòF H
	excludeId
òòI R
)
òòR S
)
òòS T
return
ôô 
TypedResults
ôô 
.
ôô  

BadRequest
ôô  *
(
ôô* +
$str
ôô+ A
)
ôôA B
;
ôôB C
if
õõ 

(
õõ 
await
õõ 
db
õõ 
.
õõ 
Motos
õõ 
.
õõ 
AnyAsync
õõ #
(
õõ# $
m
õõ$ %
=>
õõ& (
m
õõ) *
.
õõ* +
Chassi
õõ+ 1
==
õõ2 4
dto
õõ5 8
.
õõ8 9
Chassi
õõ9 ?
&&
õõ@ B
m
õõC D
.
õõD E
Id
õõE G
!=
õõH J
	excludeId
õõK T
)
õõT U
)
õõU V
return
úú 
TypedResults
úú 
.
úú  

BadRequest
úú  *
(
úú* +
$str
úú+ B
)
úúB C
;
úúC D
return
ûû 
null
ûû 
;
ûû 
}
üü 
}†† 
public¢¢ 
static
¢¢ 
class
¢¢ 
PatioEndpoints
¢¢ "
{££ 
public
§§ 

static
§§ 
void
§§ 
	Configure
§§  
(
§§  !
WebApplication
§§! /
app
§§0 3
)
§§3 4
{
•• 
var
¶¶ 
patios
¶¶ 
=
¶¶ 
app
¶¶ 
.
¶¶ 
MapGroup
¶¶ !
(
¶¶! "
$str
¶¶" /
)
¶¶/ 0
.
¶¶0 1
WithTags
¶¶1 9
(
¶¶9 :
$str
¶¶: B
)
¶¶B C
;
¶¶C D
patios
®® 
.
®® 
MapGet
®® 
(
®® 
$str
®® 
,
®® 
	GetPatios
®® $
)
®®$ %
.
©© 
WithOpenApi
©© 
(
©© 
op
©© 
=>
©© 
{
™™ 
op
´´ 
.
´´ 
Summary
´´ 
=
´´ 
$str
´´ 6
;
´´6 7
return
¨¨ 
op
¨¨ 
;
¨¨ 
}
≠≠ 
)
≠≠ 
;
≠≠ 
patios
ØØ 
.
ØØ 
MapGet
ØØ 
(
ØØ 
$str
ØØ %
,
ØØ% &
GetPatioById
ØØ' 3
)
ØØ3 4
.
∞∞ 
WithOpenApi
∞∞ 
(
∞∞ 
op
∞∞ 
=>
∞∞ 
{
±± 
op
≤≤ 
.
≤≤ 
Summary
≤≤ 
=
≤≤ 
$str
≤≤ 1
;
≤≤1 2
return
≥≥ 
op
≥≥ 
;
≥≥ 
}
¥¥ 
)
¥¥ 
;
¥¥ 
patios
∂∂ 
.
∂∂ 
MapPost
∂∂ 
(
∂∂ 
$str
∂∂ 
,
∂∂ 
CreatePatio
∂∂ '
)
∂∂' (
.
∑∑ 
WithOpenApi
∑∑ 
(
∑∑ 
op
∑∑ 
=>
∑∑ 
{
∏∏ 
op
ππ 
.
ππ 
Summary
ππ 
=
ππ 
$str
ππ )
;
ππ) *
return
∫∫ 
op
∫∫ 
;
∫∫ 
}
ªª 
)
ªª 
;
ªª 
patios
ΩΩ 
.
ΩΩ 
MapPut
ΩΩ 
(
ΩΩ 
$str
ΩΩ %
,
ΩΩ% &
UpdatePatio
ΩΩ' 2
)
ΩΩ2 3
.
ææ 
WithOpenApi
ææ 
(
ææ 
op
ææ 
=>
ææ 
{
øø 
op
¿¿ 
.
¿¿ 
Summary
¿¿ 
=
¿¿ 
$str
¿¿ -
;
¿¿- .
return
¡¡ 
op
¡¡ 
;
¡¡ 
}
¬¬ 
)
¬¬ 
;
¬¬ 
patios
ƒƒ 
.
ƒƒ 
	MapDelete
ƒƒ 
(
ƒƒ 
$str
ƒƒ (
,
ƒƒ( )
DeletePatio
ƒƒ* 5
)
ƒƒ5 6
.
≈≈ 
WithOpenApi
≈≈ 
(
≈≈ 
op
≈≈ 
=>
≈≈ 
{
∆∆ 
op
«« 
.
«« 
Summary
«« 
=
«« 
$str
«« +
;
««+ ,
return
»» 
op
»» 
;
»» 
}
…… 
)
…… 
;
…… 
}
   
private
ÃÃ 
static
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ 
IResult
ÃÃ %
>
ÃÃ% &
	GetPatios
ÃÃ' 0
(
ÃÃ0 1
HttpContext
ÃÃ1 <
ctx
ÃÃ= @
,
ÃÃ@ A
AppDbContext
ÃÃB N
db
ÃÃO Q
,
ÃÃQ R
int
ÃÃS V
page
ÃÃW [
=
ÃÃ\ ]
$num
ÃÃ^ _
,
ÃÃ_ `
int
ÃÃa d
pageSize
ÃÃe m
=
ÃÃn o
$num
ÃÃp r
)
ÃÃr s
{
ÕÕ 
var
ŒŒ 
(
ŒŒ 
	validPage
ŒŒ 
,
ŒŒ 
validPageSize
ŒŒ %
)
ŒŒ% &
=
ŒŒ' (
	ApiHelper
ŒŒ) 2
.
ŒŒ2 3 
ValidatePagination
ŒŒ3 E
(
ŒŒE F
page
ŒŒF J
,
ŒŒJ K
pageSize
ŒŒL T
)
ŒŒT U
;
ŒŒU V
var
œœ 
total
œœ 
=
œœ 
await
œœ 
db
œœ 
.
œœ 
Patios
œœ #
.
œœ# $
LongCountAsync
œœ$ 2
(
œœ2 3
)
œœ3 4
;
œœ4 5
var
–– 
items
–– 
=
–– 
await
–– 
db
–– 
.
–– 
Patios
–– #
.
—— 
OrderBy
—— 
(
—— 
p
—— 
=>
—— 
p
—— 
.
—— 
Id
—— 
)
—— 
.
““ 
Skip
““ 
(
““ 
(
““ 
	validPage
““ 
-
““ 
$num
““  
)
““  !
*
““" #
validPageSize
““$ 1
)
““1 2
.
”” 
Take
”” 
(
”” 
validPageSize
”” 
)
””  
.
‘‘ 
ToListAsync
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
return
÷÷ 
TypedResults
÷÷ 
.
÷÷ 
Ok
÷÷ 
(
÷÷ 
	ApiHelper
÷÷ (
.
÷÷( )
ToPaged
÷÷) 0
(
÷÷0 1
ctx
÷÷1 4
,
÷÷4 5
items
÷÷6 ;
,
÷÷; <
	validPage
÷÷= F
,
÷÷F G
validPageSize
÷÷H U
,
÷÷U V
total
÷÷W \
,
÷÷\ ]
$str
÷÷^ k
)
÷÷k l
)
÷÷l m
;
÷÷m n
}
◊◊ 
private
ŸŸ 
static
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
IResult
ŸŸ %
>
ŸŸ% &
GetPatioById
ŸŸ' 3
(
ŸŸ3 4
AppDbContext
ŸŸ4 @
db
ŸŸA C
,
ŸŸC D
decimal
ŸŸE L
id
ŸŸM O
)
ŸŸO P
{
⁄⁄ 
var
€€ 
p
€€ 
=
€€ 
await
€€ 
db
€€ 
.
€€ 
Patios
€€ 
.
€€  
	FindAsync
€€  )
(
€€) *
id
€€* ,
)
€€, -
;
€€- .
if
‹‹ 

(
‹‹ 
p
‹‹ 
is
‹‹ 
null
‹‹ 
)
‹‹ 
return
‹‹ 
TypedResults
‹‹ *
.
‹‹* +
NotFound
‹‹+ 3
(
‹‹3 4
)
‹‹4 5
;
‹‹5 6
return
›› 
TypedResults
›› 
.
›› 
Ok
›› 
(
›› 
p
››  
)
››  !
;
››! "
}
ﬁﬁ 
private
‡‡ 
static
‡‡ 
async
‡‡ 
Task
‡‡ 
<
‡‡ 
IResult
‡‡ %
>
‡‡% &
CreatePatio
‡‡' 2
(
‡‡2 3
AppDbContext
‡‡3 ?
db
‡‡@ B
,
‡‡B C
PatioCreateDto
‡‡D R
dto
‡‡S V
)
‡‡V W
{
·· 
if
‚‚ 

(
‚‚ 
string
‚‚ 
.
‚‚  
IsNullOrWhiteSpace
‚‚ %
(
‚‚% &
dto
‚‚& )
.
‚‚) *
Nome
‚‚* .
)
‚‚. /
)
‚‚/ 0
return
„„ 
TypedResults
„„ 
.
„„  

BadRequest
„„  *
(
„„* +
$str
„„+ >
)
„„> ?
;
„„? @
var
ÂÂ 
entity
ÂÂ 
=
ÂÂ 
new
ÂÂ 
Patio
ÂÂ 
{
ÊÊ 	
Id
ÁÁ 
=
ÁÁ 
await
ÁÁ 
	ApiHelper
ÁÁ  
.
ÁÁ  !
NextIdAsync
ÁÁ! ,
(
ÁÁ, -
db
ÁÁ- /
,
ÁÁ/ 0
$str
ÁÁ1 8
)
ÁÁ8 9
,
ÁÁ9 :
Nome
ËË 
=
ËË 
dto
ËË 
.
ËË 
Nome
ËË 
}
ÈÈ 	
;
ÈÈ	 

db
ÎÎ 

.
ÎÎ
 
Patios
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
entity
ÎÎ 
)
ÎÎ 
;
ÎÎ 
await
ÏÏ 
db
ÏÏ 
.
ÏÏ 
SaveChangesAsync
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
return
ÌÌ 
TypedResults
ÌÌ 
.
ÌÌ 
Created
ÌÌ #
(
ÌÌ# $
$"
ÌÌ$ &
$str
ÌÌ& 2
{
ÌÌ2 3
entity
ÌÌ3 9
.
ÌÌ9 :
Id
ÌÌ: <
}
ÌÌ< =
"
ÌÌ= >
,
ÌÌ> ?
entity
ÌÌ@ F
)
ÌÌF G
;
ÌÌG H
}
ÓÓ 
private
 
static
 
async
 
Task
 
<
 
IResult
 %
>
% &
UpdatePatio
' 2
(
2 3
AppDbContext
3 ?
db
@ B
,
B C
decimal
D K
id
L N
,
N O
PatioUpdateDto
P ^
dto
_ b
)
b c
{
ÒÒ 
var
ÚÚ 
p
ÚÚ 
=
ÚÚ 
await
ÚÚ 
db
ÚÚ 
.
ÚÚ 
Patios
ÚÚ 
.
ÚÚ  
	FindAsync
ÚÚ  )
(
ÚÚ) *
id
ÚÚ* ,
)
ÚÚ, -
;
ÚÚ- .
if
ÛÛ 

(
ÛÛ 
p
ÛÛ 
is
ÛÛ 
null
ÛÛ 
)
ÛÛ 
return
ÛÛ 
TypedResults
ÛÛ *
.
ÛÛ* +
NotFound
ÛÛ+ 3
(
ÛÛ3 4
)
ÛÛ4 5
;
ÛÛ5 6
if
ıı 

(
ıı 
string
ıı 
.
ıı  
IsNullOrWhiteSpace
ıı %
(
ıı% &
dto
ıı& )
.
ıı) *
Nome
ıı* .
)
ıı. /
)
ıı/ 0
return
ˆˆ 
TypedResults
ˆˆ 
.
ˆˆ  

BadRequest
ˆˆ  *
(
ˆˆ* +
$str
ˆˆ+ >
)
ˆˆ> ?
;
ˆˆ? @
p
¯¯ 	
.
¯¯	 

Nome
¯¯
 
=
¯¯ 
dto
¯¯ 
.
¯¯ 
Nome
¯¯ 
;
¯¯ 
await
˘˘ 
db
˘˘ 
.
˘˘ 
SaveChangesAsync
˘˘ !
(
˘˘! "
)
˘˘" #
;
˘˘# $
return
˙˙ 
TypedResults
˙˙ 
.
˙˙ 
Ok
˙˙ 
(
˙˙ 
p
˙˙  
)
˙˙  !
;
˙˙! "
}
˚˚ 
private
˝˝ 
static
˝˝ 
async
˝˝ 
Task
˝˝ 
<
˝˝ 
IResult
˝˝ %
>
˝˝% &
DeletePatio
˝˝' 2
(
˝˝2 3
AppDbContext
˝˝3 ?
db
˝˝@ B
,
˝˝B C
decimal
˝˝D K
id
˝˝L N
)
˝˝N O
{
˛˛ 
var
ˇˇ 
p
ˇˇ 
=
ˇˇ 
await
ˇˇ 
db
ˇˇ 
.
ˇˇ 
Patios
ˇˇ 
.
ˇˇ  
Include
ˇˇ  '
(
ˇˇ' (
x
ˇˇ( )
=>
ˇˇ* ,
x
ˇˇ- .
.
ˇˇ. /
Motos
ˇˇ/ 4
)
ˇˇ4 5
.
ˇˇ5 6!
FirstOrDefaultAsync
ˇˇ6 I
(
ˇˇI J
x
ˇˇJ K
=>
ˇˇL N
x
ˇˇO P
.
ˇˇP Q
Id
ˇˇQ S
==
ˇˇT V
id
ˇˇW Y
)
ˇˇY Z
;
ˇˇZ [
if
ÄÄ 

(
ÄÄ 
p
ÄÄ 
is
ÄÄ 
null
ÄÄ 
)
ÄÄ 
return
ÄÄ 
TypedResults
ÄÄ *
.
ÄÄ* +
NotFound
ÄÄ+ 3
(
ÄÄ3 4
)
ÄÄ4 5
;
ÄÄ5 6
if
ÇÇ 

(
ÇÇ 
p
ÇÇ 
.
ÇÇ 
Motos
ÇÇ 
.
ÇÇ 
Count
ÇÇ 
>
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
return
ÉÉ 
TypedResults
ÉÉ 
.
ÉÉ  

BadRequest
ÉÉ  *
(
ÉÉ* +
$str
ÉÉ+ _
)
ÉÉ_ `
;
ÉÉ` a
db
ÖÖ 

.
ÖÖ
 
Patios
ÖÖ 
.
ÖÖ 
Remove
ÖÖ 
(
ÖÖ 
p
ÖÖ 
)
ÖÖ 
;
ÖÖ 
await
ÜÜ 
db
ÜÜ 
.
ÜÜ 
SaveChangesAsync
ÜÜ !
(
ÜÜ! "
)
ÜÜ" #
;
ÜÜ# $
return
áá 
TypedResults
áá 
.
áá 
	NoContent
áá %
(
áá% &
)
áá& '
;
áá' (
}
àà 
}ââ 
publicãã 
static
ãã 
class
ãã "
StatusGrupoEndpoints
ãã (
{åå 
public
çç 

static
çç 
void
çç 
	Configure
çç  
(
çç  !
WebApplication
çç! /
app
çç0 3
)
çç3 4
{
éé 
var
èè 
statusGrupos
èè 
=
èè 
app
èè 
.
èè 
MapGroup
èè '
(
èè' (
$str
èè( ;
)
èè; <
.
èè< =
WithTags
èè= E
(
èèE F
$str
èèF S
)
èèS T
;
èèT U
statusGrupos
ëë 
.
ëë 
MapGet
ëë 
(
ëë 
$str
ëë 
,
ëë  
GetStatusGrupos
ëë! 0
)
ëë0 1
.
íí 
WithOpenApi
íí 
(
íí 
op
íí 
=>
íí 
{
ìì 
op
îî 
.
îî 
Summary
îî 
=
îî 
$str
îî =
;
îî= >
return
ïï 
op
ïï 
;
ïï 
}
ññ 
)
ññ 
;
ññ 
statusGrupos
òò 
.
òò 
MapGet
òò 
(
òò 
$str
òò +
,
òò+ , 
GetStatusGrupoById
òò- ?
)
òò? @
.
ôô 
WithOpenApi
ôô 
(
ôô 
op
ôô 
=>
ôô 
{
öö 
op
õõ 
.
õõ 
Summary
õõ 
=
õõ 
$str
õõ 8
;
õõ8 9
return
úú 
op
úú 
;
úú 
}
ùù 
)
ùù 
;
ùù 
statusGrupos
üü 
.
üü 
MapPost
üü 
(
üü 
$str
üü  
,
üü  !
CreateStatusGrupo
üü" 3
)
üü3 4
.
†† 
WithOpenApi
†† 
(
†† 
op
†† 
=>
†† 
{
°° 
op
¢¢ 
.
¢¢ 
Summary
¢¢ 
=
¢¢ 
$str
¢¢ 0
;
¢¢0 1
return
££ 
op
££ 
;
££ 
}
§§ 
)
§§ 
;
§§ 
statusGrupos
¶¶ 
.
¶¶ 
MapPut
¶¶ 
(
¶¶ 
$str
¶¶ +
,
¶¶+ ,
UpdateStatusGrupo
¶¶- >
)
¶¶> ?
.
ßß 
WithOpenApi
ßß 
(
ßß 
op
ßß 
=>
ßß 
{
®® 
op
©© 
.
©© 
Summary
©© 
=
©© 
$str
©© 4
;
©©4 5
return
™™ 
op
™™ 
;
™™ 
}
´´ 
)
´´ 
;
´´ 
statusGrupos
≠≠ 
.
≠≠ 
	MapDelete
≠≠ 
(
≠≠ 
$str
≠≠ .
,
≠≠. /
DeleteStatusGrupo
≠≠0 A
)
≠≠A B
.
ÆÆ 
WithOpenApi
ÆÆ 
(
ÆÆ 
op
ÆÆ 
=>
ÆÆ 
{
ØØ 
op
∞∞ 
.
∞∞ 
Summary
∞∞ 
=
∞∞ 
$str
∞∞ 2
;
∞∞2 3
return
±± 
op
±± 
;
±± 
}
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 
private
µµ 
static
µµ 
async
µµ 
Task
µµ 
<
µµ 
IResult
µµ %
>
µµ% &
GetStatusGrupos
µµ' 6
(
µµ6 7
HttpContext
µµ7 B
ctx
µµC F
,
µµF G
AppDbContext
µµH T
db
µµU W
,
µµW X
int
µµY \
page
µµ] a
=
µµb c
$num
µµd e
,
µµe f
int
µµg j
pageSize
µµk s
=
µµt u
$num
µµv x
)
µµx y
{
∂∂ 
var
∑∑ 
(
∑∑ 
	validPage
∑∑ 
,
∑∑ 
validPageSize
∑∑ %
)
∑∑% &
=
∑∑' (
	ApiHelper
∑∑) 2
.
∑∑2 3 
ValidatePagination
∑∑3 E
(
∑∑E F
page
∑∑F J
,
∑∑J K
pageSize
∑∑L T
)
∑∑T U
;
∑∑U V
var
∏∏ 
total
∏∏ 
=
∏∏ 
await
∏∏ 
db
∏∏ 
.
∏∏ 
StatusGrupos
∏∏ )
.
∏∏) *
LongCountAsync
∏∏* 8
(
∏∏8 9
)
∏∏9 :
;
∏∏: ;
var
ππ 
items
ππ 
=
ππ 
await
ππ 
db
ππ 
.
ππ 
StatusGrupos
ππ )
.
∫∫ 
OrderBy
∫∫ 
(
∫∫ 
sg
∫∫ 
=>
∫∫ 
sg
∫∫ 
.
∫∫ 
Id
∫∫  
)
∫∫  !
.
ªª 
Skip
ªª 
(
ªª 
(
ªª 
	validPage
ªª 
-
ªª 
$num
ªª  
)
ªª  !
*
ªª" #
validPageSize
ªª$ 1
)
ªª1 2
.
ºº 
Take
ºº 
(
ºº 
validPageSize
ºº 
)
ºº  
.
ΩΩ 
ToListAsync
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
return
øø 
TypedResults
øø 
.
øø 
Ok
øø 
(
øø 
	ApiHelper
øø (
.
øø( )
ToPaged
øø) 0
(
øø0 1
ctx
øø1 4
,
øø4 5
items
øø6 ;
,
øø; <
	validPage
øø= F
,
øøF G
validPageSize
øøH U
,
øøU V
total
øøW \
,
øø\ ]
$str
øø^ q
)
øøq r
)
øør s
;
øøs t
}
¿¿ 
private
¬¬ 
static
¬¬ 
async
¬¬ 
Task
¬¬ 
<
¬¬ 
IResult
¬¬ %
>
¬¬% & 
GetStatusGrupoById
¬¬' 9
(
¬¬9 :
AppDbContext
¬¬: F
db
¬¬G I
,
¬¬I J
decimal
¬¬K R
id
¬¬S U
)
¬¬U V
{
√√ 
var
ƒƒ 
sg
ƒƒ 
=
ƒƒ 
await
ƒƒ 
db
ƒƒ 
.
ƒƒ 
StatusGrupos
ƒƒ &
.
ƒƒ& '
Include
ƒƒ' .
(
ƒƒ. /
x
ƒƒ/ 0
=>
ƒƒ1 3
x
ƒƒ4 5
.
ƒƒ5 6
Statuses
ƒƒ6 >
)
ƒƒ> ?
.
ƒƒ? @!
FirstOrDefaultAsync
ƒƒ@ S
(
ƒƒS T
x
ƒƒT U
=>
ƒƒV X
x
ƒƒY Z
.
ƒƒZ [
Id
ƒƒ[ ]
==
ƒƒ^ `
id
ƒƒa c
)
ƒƒc d
;
ƒƒd e
if
≈≈ 

(
≈≈ 
sg
≈≈ 
is
≈≈ 
null
≈≈ 
)
≈≈ 
return
≈≈ 
TypedResults
≈≈ +
.
≈≈+ ,
NotFound
≈≈, 4
(
≈≈4 5
)
≈≈5 6
;
≈≈6 7
return
∆∆ 
TypedResults
∆∆ 
.
∆∆ 
Ok
∆∆ 
(
∆∆ 
sg
∆∆ !
)
∆∆! "
;
∆∆" #
}
«« 
private
…… 
static
…… 
async
…… 
Task
…… 
<
…… 
IResult
…… %
>
……% &
CreateStatusGrupo
……' 8
(
……8 9
AppDbContext
……9 E
db
……F H
,
……H I"
StatusGrupoCreateDto
……J ^
dto
……_ b
)
……b c
{
   
if
ÀÀ 

(
ÀÀ 
string
ÀÀ 
.
ÀÀ  
IsNullOrWhiteSpace
ÀÀ %
(
ÀÀ% &
dto
ÀÀ& )
.
ÀÀ) *
Nome
ÀÀ* .
)
ÀÀ. /
)
ÀÀ/ 0
return
ÃÃ 
TypedResults
ÃÃ 
.
ÃÃ  

BadRequest
ÃÃ  *
(
ÃÃ* +
$str
ÃÃ+ >
)
ÃÃ> ?
;
ÃÃ? @
var
ŒŒ 
entity
ŒŒ 
=
ŒŒ 
new
ŒŒ 
StatusGrupo
ŒŒ $
{
œœ 	
Id
–– 
=
–– 
await
–– 
	ApiHelper
––  
.
––  !
NextIdAsync
––! ,
(
––, -
db
––- /
,
––/ 0
$str
––1 ?
)
––? @
,
––@ A
Nome
—— 
=
—— 
dto
—— 
.
—— 
Nome
—— 
}
““ 	
;
““	 

db
‘‘ 

.
‘‘
 
StatusGrupos
‘‘ 
.
‘‘ 
Add
‘‘ 
(
‘‘ 
entity
‘‘ "
)
‘‘" #
;
‘‘# $
await
’’ 
db
’’ 
.
’’ 
SaveChangesAsync
’’ !
(
’’! "
)
’’" #
;
’’# $
return
÷÷ 
TypedResults
÷÷ 
.
÷÷ 
Created
÷÷ #
(
÷÷# $
$"
÷÷$ &
$str
÷÷& 8
{
÷÷8 9
entity
÷÷9 ?
.
÷÷? @
Id
÷÷@ B
}
÷÷B C
"
÷÷C D
,
÷÷D E
entity
÷÷F L
)
÷÷L M
;
÷÷M N
}
◊◊ 
private
ŸŸ 
static
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
IResult
ŸŸ %
>
ŸŸ% &
UpdateStatusGrupo
ŸŸ' 8
(
ŸŸ8 9
AppDbContext
ŸŸ9 E
db
ŸŸF H
,
ŸŸH I
decimal
ŸŸJ Q
id
ŸŸR T
,
ŸŸT U"
StatusGrupoUpdateDto
ŸŸV j
dto
ŸŸk n
)
ŸŸn o
{
⁄⁄ 
var
€€ 
sg
€€ 
=
€€ 
await
€€ 
db
€€ 
.
€€ 
StatusGrupos
€€ &
.
€€& '
	FindAsync
€€' 0
(
€€0 1
id
€€1 3
)
€€3 4
;
€€4 5
if
‹‹ 

(
‹‹ 
sg
‹‹ 
is
‹‹ 
null
‹‹ 
)
‹‹ 
return
‹‹ 
TypedResults
‹‹ +
.
‹‹+ ,
NotFound
‹‹, 4
(
‹‹4 5
)
‹‹5 6
;
‹‹6 7
if
ﬁﬁ 

(
ﬁﬁ 
string
ﬁﬁ 
.
ﬁﬁ  
IsNullOrWhiteSpace
ﬁﬁ %
(
ﬁﬁ% &
dto
ﬁﬁ& )
.
ﬁﬁ) *
Nome
ﬁﬁ* .
)
ﬁﬁ. /
)
ﬁﬁ/ 0
return
ﬂﬂ 
TypedResults
ﬂﬂ 
.
ﬂﬂ  

BadRequest
ﬂﬂ  *
(
ﬂﬂ* +
$str
ﬂﬂ+ >
)
ﬂﬂ> ?
;
ﬂﬂ? @
sg
·· 

.
··
 
Nome
·· 
=
·· 
dto
·· 
.
·· 
Nome
·· 
;
·· 
await
‚‚ 
db
‚‚ 
.
‚‚ 
SaveChangesAsync
‚‚ !
(
‚‚! "
)
‚‚" #
;
‚‚# $
return
„„ 
TypedResults
„„ 
.
„„ 
Ok
„„ 
(
„„ 
sg
„„ !
)
„„! "
;
„„" #
}
‰‰ 
private
ÊÊ 
static
ÊÊ 
async
ÊÊ 
Task
ÊÊ 
<
ÊÊ 
IResult
ÊÊ %
>
ÊÊ% &
DeleteStatusGrupo
ÊÊ' 8
(
ÊÊ8 9
AppDbContext
ÊÊ9 E
db
ÊÊF H
,
ÊÊH I
decimal
ÊÊJ Q
id
ÊÊR T
)
ÊÊT U
{
ÁÁ 
var
ËË 
sg
ËË 
=
ËË 
await
ËË 
db
ËË 
.
ËË 
StatusGrupos
ËË &
.
ËË& '
Include
ËË' .
(
ËË. /
x
ËË/ 0
=>
ËË1 3
x
ËË4 5
.
ËË5 6
Statuses
ËË6 >
)
ËË> ?
.
ËË? @!
FirstOrDefaultAsync
ËË@ S
(
ËËS T
x
ËËT U
=>
ËËV X
x
ËËY Z
.
ËËZ [
Id
ËË[ ]
==
ËË^ `
id
ËËa c
)
ËËc d
;
ËËd e
if
ÈÈ 

(
ÈÈ 
sg
ÈÈ 
is
ÈÈ 
null
ÈÈ 
)
ÈÈ 
return
ÈÈ 
TypedResults
ÈÈ +
.
ÈÈ+ ,
NotFound
ÈÈ, 4
(
ÈÈ4 5
)
ÈÈ5 6
;
ÈÈ6 7
if
ÎÎ 

(
ÎÎ 
sg
ÎÎ 
.
ÎÎ 
Statuses
ÎÎ 
.
ÎÎ 
Count
ÎÎ 
>
ÎÎ 
$num
ÎÎ  !
)
ÎÎ! "
return
ÏÏ 
TypedResults
ÏÏ 
.
ÏÏ  

BadRequest
ÏÏ  *
(
ÏÏ* +
$str
ÏÏ+ d
)
ÏÏd e
;
ÏÏe f
db
ÓÓ 

.
ÓÓ
 
StatusGrupos
ÓÓ 
.
ÓÓ 
Remove
ÓÓ 
(
ÓÓ 
sg
ÓÓ !
)
ÓÓ! "
;
ÓÓ" #
await
ÔÔ 
db
ÔÔ 
.
ÔÔ 
SaveChangesAsync
ÔÔ !
(
ÔÔ! "
)
ÔÔ" #
;
ÔÔ# $
return
 
TypedResults
 
.
 
	NoContent
 %
(
% &
)
& '
;
' (
}
ÒÒ 
}ÚÚ 
publicÙÙ 
static
ÙÙ 
class
ÙÙ 
StatusEndpoints
ÙÙ #
{ıı 
public
ˆˆ 

static
ˆˆ 
void
ˆˆ 
	Configure
ˆˆ  
(
ˆˆ  !
WebApplication
ˆˆ! /
app
ˆˆ0 3
)
ˆˆ3 4
{
˜˜ 
var
¯¯ 
statuses
¯¯ 
=
¯¯ 
app
¯¯ 
.
¯¯ 
MapGroup
¯¯ #
(
¯¯# $
$str
¯¯$ 3
)
¯¯3 4
.
¯¯4 5
WithTags
¯¯5 =
(
¯¯= >
$str
¯¯> F
)
¯¯F G
;
¯¯G H
statuses
˙˙ 
.
˙˙ 
MapGet
˙˙ 
(
˙˙ 
$str
˙˙ 
,
˙˙ 
GetStatuses
˙˙ (
)
˙˙( )
.
˚˚ 
WithOpenApi
˚˚ 
(
˚˚ 
op
˚˚ 
=>
˚˚ 
{
¸¸ 
op
˝˝ 
.
˝˝ 
Summary
˝˝ 
=
˝˝ 
$str
˝˝ 6
;
˝˝6 7
return
˛˛ 
op
˛˛ 
;
˛˛ 
}
ˇˇ 
)
ˇˇ 
;
ˇˇ 
statuses
ÅÅ 
.
ÅÅ 
MapGet
ÅÅ 
(
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
GetStatusById
ÅÅ) 6
)
ÅÅ6 7
.
ÇÇ 
WithOpenApi
ÇÇ 
(
ÇÇ 
op
ÇÇ 
=>
ÇÇ 
{
ÉÉ 
op
ÑÑ 
.
ÑÑ 
Summary
ÑÑ 
=
ÑÑ 
$str
ÑÑ 2
;
ÑÑ2 3
return
ÖÖ 
op
ÖÖ 
;
ÖÖ 
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
statuses
àà 
.
àà 
MapPost
àà 
(
àà 
$str
àà 
,
àà 
CreateStatus
àà *
)
àà* +
.
ââ 
WithOpenApi
ââ 
(
ââ 
op
ââ 
=>
ââ 
{
ää 
op
ãã 
.
ãã 
Summary
ãã 
=
ãã 
$str
ãã *
;
ãã* +
return
åå 
op
åå 
;
åå 
}
çç 
)
çç 
;
çç 
statuses
èè 
.
èè 
MapPut
èè 
(
èè 
$str
èè '
,
èè' (
UpdateStatus
èè) 5
)
èè5 6
.
êê 
WithOpenApi
êê 
(
êê 
op
êê 
=>
êê 
{
ëë 
op
íí 
.
íí 
Summary
íí 
=
íí 
$str
íí .
;
íí. /
return
ìì 
op
ìì 
;
ìì 
}
îî 
)
îî 
;
îî 
statuses
ññ 
.
ññ 
	MapDelete
ññ 
(
ññ 
$str
ññ *
,
ññ* +
DeleteStatus
ññ, 8
)
ññ8 9
.
óó 
WithOpenApi
óó 
(
óó 
op
óó 
=>
óó 
{
òò 
op
ôô 
.
ôô 
Summary
ôô 
=
ôô 
$str
ôô ,
;
ôô, -
return
öö 
op
öö 
;
öö 
}
õõ 
)
õõ 
;
õõ 
}
úú 
private
ûû 
static
ûû 
async
ûû 
Task
ûû 
<
ûû 
IResult
ûû %
>
ûû% &
GetStatuses
ûû' 2
(
ûû2 3
HttpContext
ûû3 >
ctx
ûû? B
,
ûûB C
AppDbContext
ûûD P
db
ûûQ S
,
ûûS T
int
ûûU X
page
ûûY ]
=
ûû^ _
$num
ûû` a
,
ûûa b
int
ûûc f
pageSize
ûûg o
=
ûûp q
$num
ûûr t
)
ûût u
{
üü 
var
†† 
(
†† 
	validPage
†† 
,
†† 
validPageSize
†† %
)
††% &
=
††' (
	ApiHelper
††) 2
.
††2 3 
ValidatePagination
††3 E
(
††E F
page
††F J
,
††J K
pageSize
††L T
)
††T U
;
††U V
var
°° 
query
°° 
=
°° 
db
°° 
.
°° 
Statuses
°° 
.
°°  
Include
°°  '
(
°°' (
s
°°( )
=>
°°* ,
s
°°- .
.
°°. /
StatusGrupo
°°/ :
)
°°: ;
.
°°; <
AsQueryable
°°< G
(
°°G H
)
°°H I
;
°°I J
var
¢¢ 
total
¢¢ 
=
¢¢ 
await
¢¢ 
query
¢¢ 
.
¢¢  
LongCountAsync
¢¢  .
(
¢¢. /
)
¢¢/ 0
;
¢¢0 1
var
££ 
items
££ 
=
££ 
await
££ 
query
££ 
.
§§ 
OrderBy
§§ 
(
§§ 
s
§§ 
=>
§§ 
s
§§ 
.
§§ 
Id
§§ 
)
§§ 
.
•• 
Skip
•• 
(
•• 
(
•• 
	validPage
•• 
-
•• 
$num
••  
)
••  !
*
••" #
validPageSize
••$ 1
)
••1 2
.
¶¶ 
Take
¶¶ 
(
¶¶ 
validPageSize
¶¶ 
)
¶¶  
.
ßß 
ToListAsync
ßß 
(
ßß 
)
ßß 
;
ßß 
return
©© 
TypedResults
©© 
.
©© 
Ok
©© 
(
©© 
	ApiHelper
©© (
.
©©( )
ToPaged
©©) 0
(
©©0 1
ctx
©©1 4
,
©©4 5
items
©©6 ;
,
©©; <
	validPage
©©= F
,
©©F G
validPageSize
©©H U
,
©©U V
total
©©W \
,
©©\ ]
$str
©©^ m
)
©©m n
)
©©n o
;
©©o p
}
™™ 
private
¨¨ 
static
¨¨ 
async
¨¨ 
Task
¨¨ 
<
¨¨ 
IResult
¨¨ %
>
¨¨% &
GetStatusById
¨¨' 4
(
¨¨4 5
AppDbContext
¨¨5 A
db
¨¨B D
,
¨¨D E
decimal
¨¨F M
id
¨¨N P
)
¨¨P Q
{
≠≠ 
var
ÆÆ 
s
ÆÆ 
=
ÆÆ 
await
ÆÆ 
db
ÆÆ 
.
ÆÆ 
Statuses
ÆÆ !
.
ÆÆ! "
Include
ÆÆ" )
(
ÆÆ) *
x
ÆÆ* +
=>
ÆÆ, .
x
ÆÆ/ 0
.
ÆÆ0 1
StatusGrupo
ÆÆ1 <
)
ÆÆ< =
.
ÆÆ= >!
FirstOrDefaultAsync
ÆÆ> Q
(
ÆÆQ R
x
ÆÆR S
=>
ÆÆT V
x
ÆÆW X
.
ÆÆX Y
Id
ÆÆY [
==
ÆÆ\ ^
id
ÆÆ_ a
)
ÆÆa b
;
ÆÆb c
if
ØØ 

(
ØØ 
s
ØØ 
is
ØØ 
null
ØØ 
)
ØØ 
return
ØØ 
TypedResults
ØØ *
.
ØØ* +
NotFound
ØØ+ 3
(
ØØ3 4
)
ØØ4 5
;
ØØ5 6
return
∞∞ 
TypedResults
∞∞ 
.
∞∞ 
Ok
∞∞ 
(
∞∞ 
s
∞∞  
)
∞∞  !
;
∞∞! "
}
±± 
private
≥≥ 
static
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
IResult
≥≥ %
>
≥≥% &
CreateStatus
≥≥' 3
(
≥≥3 4
AppDbContext
≥≥4 @
db
≥≥A C
,
≥≥C D
StatusCreateDto
≥≥E T
dto
≥≥U X
)
≥≥X Y
{
¥¥ 
if
µµ 

(
µµ 
string
µµ 
.
µµ  
IsNullOrWhiteSpace
µµ %
(
µµ% &
dto
µµ& )
.
µµ) *
Nome
µµ* .
)
µµ. /
)
µµ/ 0
return
∂∂ 
TypedResults
∂∂ 
.
∂∂  

BadRequest
∂∂  *
(
∂∂* +
$str
∂∂+ >
)
∂∂> ?
;
∂∂? @
if
∏∏ 

(
∏∏ 
!
∏∏ 
await
∏∏ 
db
∏∏ 
.
∏∏ 
StatusGrupos
∏∏ "
.
∏∏" #
AnyAsync
∏∏# +
(
∏∏+ ,
x
∏∏, -
=>
∏∏. 0
x
∏∏1 2
.
∏∏2 3
Id
∏∏3 5
==
∏∏6 8
dto
∏∏9 <
.
∏∏< =
StatusGrupoId
∏∏= J
)
∏∏J K
)
∏∏K L
return
ππ 
TypedResults
ππ 
.
ππ  

BadRequest
ππ  *
(
ππ* +
$str
ππ+ D
)
ππD E
;
ππE F
var
ªª 
entity
ªª 
=
ªª 
new
ªª 
Status
ªª 
{
ºº 	
Id
ΩΩ 
=
ΩΩ 
await
ΩΩ 
	ApiHelper
ΩΩ  
.
ΩΩ  !
NextIdAsync
ΩΩ! ,
(
ΩΩ, -
db
ΩΩ- /
,
ΩΩ/ 0
$str
ΩΩ1 9
)
ΩΩ9 :
,
ΩΩ: ;
Nome
ææ 
=
ææ 
dto
ææ 
.
ææ 
Nome
ææ 
,
ææ 
StatusGrupoId
øø 
=
øø 
dto
øø 
.
øø  
StatusGrupoId
øø  -
}
¿¿ 	
;
¿¿	 

db
¬¬ 

.
¬¬
 
Statuses
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
entity
¬¬ 
)
¬¬ 
;
¬¬  
await
√√ 
db
√√ 
.
√√ 
SaveChangesAsync
√√ !
(
√√! "
)
√√" #
;
√√# $
return
ƒƒ 
TypedResults
ƒƒ 
.
ƒƒ 
Created
ƒƒ #
(
ƒƒ# $
$"
ƒƒ$ &
$str
ƒƒ& 4
{
ƒƒ4 5
entity
ƒƒ5 ;
.
ƒƒ; <
Id
ƒƒ< >
}
ƒƒ> ?
"
ƒƒ? @
,
ƒƒ@ A
entity
ƒƒB H
)
ƒƒH I
;
ƒƒI J
}
≈≈ 
private
«« 
static
«« 
async
«« 
Task
«« 
<
«« 
IResult
«« %
>
««% &
UpdateStatus
««' 3
(
««3 4
AppDbContext
««4 @
db
««A C
,
««C D
decimal
««E L
id
««M O
,
««O P
StatusUpdateDto
««Q `
dto
««a d
)
««d e
{
»» 
var
…… 
s
…… 
=
…… 
await
…… 
db
…… 
.
…… 
Statuses
…… !
.
……! "
	FindAsync
……" +
(
……+ ,
id
……, .
)
……. /
;
……/ 0
if
   

(
   
s
   
is
   
null
   
)
   
return
   
TypedResults
   *
.
  * +
NotFound
  + 3
(
  3 4
)
  4 5
;
  5 6
if
ÃÃ 

(
ÃÃ 
string
ÃÃ 
.
ÃÃ  
IsNullOrWhiteSpace
ÃÃ %
(
ÃÃ% &
dto
ÃÃ& )
.
ÃÃ) *
Nome
ÃÃ* .
)
ÃÃ. /
)
ÃÃ/ 0
return
ÕÕ 
TypedResults
ÕÕ 
.
ÕÕ  

BadRequest
ÕÕ  *
(
ÕÕ* +
$str
ÕÕ+ >
)
ÕÕ> ?
;
ÕÕ? @
if
œœ 

(
œœ 
!
œœ 
await
œœ 
db
œœ 
.
œœ 
StatusGrupos
œœ "
.
œœ" #
AnyAsync
œœ# +
(
œœ+ ,
x
œœ, -
=>
œœ. 0
x
œœ1 2
.
œœ2 3
Id
œœ3 5
==
œœ6 8
dto
œœ9 <
.
œœ< =
StatusGrupoId
œœ= J
)
œœJ K
)
œœK L
return
–– 
TypedResults
–– 
.
––  

BadRequest
––  *
(
––* +
$str
––+ D
)
––D E
;
––E F
s
““ 	
.
““	 

Nome
““
 
=
““ 
dto
““ 
.
““ 
Nome
““ 
;
““ 
s
”” 	
.
””	 

StatusGrupoId
””
 
=
”” 
dto
”” 
.
”” 
StatusGrupoId
”” +
;
””+ ,
await
‘‘ 
db
‘‘ 
.
‘‘ 
SaveChangesAsync
‘‘ !
(
‘‘! "
)
‘‘" #
;
‘‘# $
return
’’ 
TypedResults
’’ 
.
’’ 
Ok
’’ 
(
’’ 
s
’’  
)
’’  !
;
’’! "
}
÷÷ 
private
ÿÿ 
static
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
IResult
ÿÿ %
>
ÿÿ% &
DeleteStatus
ÿÿ' 3
(
ÿÿ3 4
AppDbContext
ÿÿ4 @
db
ÿÿA C
,
ÿÿC D
decimal
ÿÿE L
id
ÿÿM O
)
ÿÿO P
{
ŸŸ 
var
⁄⁄ 
s
⁄⁄ 
=
⁄⁄ 
await
⁄⁄ 
db
⁄⁄ 
.
⁄⁄ 
Statuses
⁄⁄ !
.
⁄⁄! "
Include
⁄⁄" )
(
⁄⁄) *
x
⁄⁄* +
=>
⁄⁄, .
x
⁄⁄/ 0
.
⁄⁄0 1
Motos
⁄⁄1 6
)
⁄⁄6 7
.
⁄⁄7 8!
FirstOrDefaultAsync
⁄⁄8 K
(
⁄⁄K L
x
⁄⁄L M
=>
⁄⁄N P
x
⁄⁄Q R
.
⁄⁄R S
Id
⁄⁄S U
==
⁄⁄V X
id
⁄⁄Y [
)
⁄⁄[ \
;
⁄⁄\ ]
if
€€ 

(
€€ 
s
€€ 
is
€€ 
null
€€ 
)
€€ 
return
€€ 
TypedResults
€€ *
.
€€* +
NotFound
€€+ 3
(
€€3 4
)
€€4 5
;
€€5 6
if
›› 

(
›› 
s
›› 
.
›› 
Motos
›› 
.
›› 
Count
›› 
>
›› 
$num
›› 
)
›› 
return
ﬁﬁ 
TypedResults
ﬁﬁ 
.
ﬁﬁ  

BadRequest
ﬁﬁ  *
(
ﬁﬁ* +
$str
ﬁﬁ+ `
)
ﬁﬁ` a
;
ﬁﬁa b
db
‡‡ 

.
‡‡
 
Statuses
‡‡ 
.
‡‡ 
Remove
‡‡ 
(
‡‡ 
s
‡‡ 
)
‡‡ 
;
‡‡ 
await
·· 
db
·· 
.
·· 
SaveChangesAsync
·· !
(
··! "
)
··" #
;
··# $
return
‚‚ 
TypedResults
‚‚ 
.
‚‚ 
	NoContent
‚‚ %
(
‚‚% &
)
‚‚& '
;
‚‚' (
}
„„ 
}‰‰ 
publicËË 
static
ËË 
class
ËË 
	ApiHelper
ËË 
{ÈÈ 
public
ÍÍ 

static
ÍÍ 
Link
ÍÍ 
MakeLink
ÍÍ 
(
ÍÍ  
HttpContext
ÍÍ  +
ctx
ÍÍ, /
,
ÍÍ/ 0
string
ÍÍ1 7
rel
ÍÍ8 ;
,
ÍÍ; <
string
ÍÍ= C
path
ÍÍD H
,
ÍÍH I
string
ÍÍJ P
method
ÍÍQ W
)
ÍÍW X
=>
ÍÍY [
new
ÎÎ 
(
ÎÎ 
rel
ÎÎ 
,
ÎÎ 
$"
ÎÎ 
{
ÎÎ 
ctx
ÎÎ 
.
ÎÎ 
Request
ÎÎ 
.
ÎÎ  
Scheme
ÎÎ  &
}
ÎÎ& '
$str
ÎÎ' *
{
ÎÎ* +
ctx
ÎÎ+ .
.
ÎÎ. /
Request
ÎÎ/ 6
.
ÎÎ6 7
Host
ÎÎ7 ;
}
ÎÎ; <
{
ÎÎ< =
path
ÎÎ= A
}
ÎÎA B
"
ÎÎB C
,
ÎÎC D
method
ÎÎE K
)
ÎÎK L
;
ÎÎL M
public
ÌÌ 

static
ÌÌ 
PagedResult
ÌÌ 
<
ÌÌ 
T
ÌÌ 
>
ÌÌ  
ToPaged
ÌÌ! (
<
ÌÌ( )
T
ÌÌ) *
>
ÌÌ* +
(
ÌÌ+ ,
HttpContext
ÓÓ 
ctx
ÓÓ 
,
ÓÓ 
IEnumerable
ÓÓ $
<
ÓÓ$ %
T
ÓÓ% &
>
ÓÓ& '
items
ÓÓ( -
,
ÓÓ- .
int
ÓÓ/ 2
page
ÓÓ3 7
,
ÓÓ7 8
int
ÓÓ9 <
pageSize
ÓÓ= E
,
ÓÓE F
long
ÓÓG K
total
ÓÓL Q
,
ÓÓQ R
string
ÓÓS Y
basePath
ÓÓZ b
)
ÓÓb c
{
ÔÔ 
var
 
links
 
=
 
new
 
List
 
<
 
Link
 !
>
! "
{
ÒÒ 	
MakeLink
ÚÚ 
(
ÚÚ 
ctx
ÚÚ 
,
ÚÚ 
$str
ÚÚ  
,
ÚÚ  !
$"
ÚÚ" $
{
ÚÚ$ %
basePath
ÚÚ% -
}
ÚÚ- .
$str
ÚÚ. 4
{
ÚÚ4 5
page
ÚÚ5 9
}
ÚÚ9 :
$str
ÚÚ: D
{
ÚÚD E
pageSize
ÚÚE M
}
ÚÚM N
"
ÚÚN O
,
ÚÚO P
$str
ÚÚQ V
)
ÚÚV W
}
ÛÛ 	
;
ÛÛ	 

var
ıı 

totalPages
ıı 
=
ıı 
(
ıı 
int
ıı 
)
ıı 
Math
ıı "
.
ıı" #
Ceiling
ıı# *
(
ıı* +
total
ıı+ 0
/
ıı1 2
(
ıı3 4
double
ıı4 :
)
ıı: ;
pageSize
ıı; C
)
ııC D
;
ııD E
if
˜˜ 

(
˜˜ 
page
˜˜ 
>
˜˜ 
$num
˜˜ 
)
˜˜ 
links
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
MakeLink
¯¯ 
(
¯¯ 
ctx
¯¯ "
,
¯¯" #
$str
¯¯$ *
,
¯¯* +
$"
¯¯, .
{
¯¯. /
basePath
¯¯/ 7
}
¯¯7 8
$str
¯¯8 >
{
¯¯> ?
page
¯¯? C
-
¯¯D E
$num
¯¯F G
}
¯¯G H
$str
¯¯H R
{
¯¯R S
pageSize
¯¯S [
}
¯¯[ \
"
¯¯\ ]
,
¯¯] ^
$str
¯¯_ d
)
¯¯d e
)
¯¯e f
;
¯¯f g
if
˙˙ 

(
˙˙ 
page
˙˙ 
<
˙˙ 

totalPages
˙˙ 
)
˙˙ 
links
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
MakeLink
˚˚ 
(
˚˚ 
ctx
˚˚ "
,
˚˚" #
$str
˚˚$ *
,
˚˚* +
$"
˚˚, .
{
˚˚. /
basePath
˚˚/ 7
}
˚˚7 8
$str
˚˚8 >
{
˚˚> ?
page
˚˚? C
+
˚˚D E
$num
˚˚F G
}
˚˚G H
$str
˚˚H R
{
˚˚R S
pageSize
˚˚S [
}
˚˚[ \
"
˚˚\ ]
,
˚˚] ^
$str
˚˚_ d
)
˚˚d e
)
˚˚e f
;
˚˚f g
return
˝˝ 
new
˝˝ 
PagedResult
˝˝ 
<
˝˝ 
T
˝˝  
>
˝˝  !
{
˛˛ 	
Items
ˇˇ 
=
ˇˇ 
items
ˇˇ 
,
ˇˇ 
Page
ÄÄ 
=
ÄÄ 
page
ÄÄ 
,
ÄÄ 
PageSize
ÅÅ 
=
ÅÅ 
pageSize
ÅÅ 
,
ÅÅ  

TotalCount
ÇÇ 
=
ÇÇ 
total
ÇÇ 
,
ÇÇ 
Links
ÉÉ 
=
ÉÉ 
links
ÉÉ 
}
ÑÑ 	
;
ÑÑ	 

}
ÖÖ 
public
áá 

static
áá 
async
áá 
Task
áá 
<
áá 
decimal
áá $
>
áá$ %
NextIdAsync
áá& 1
(
áá1 2
AppDbContext
áá2 >
db
áá? A
,
ááA B
string
ááC I
table
ááJ O
)
ááO P
{
àà 
var
ââ 

connection
ââ 
=
ââ 
db
ââ 
.
ââ 
Database
ââ $
.
ââ$ %
GetDbConnection
ââ% 4
(
ââ4 5
)
ââ5 6
;
ââ6 7
if
ãã 

(
ãã 

connection
ãã 
.
ãã 
State
ãã 
!=
ãã 
ConnectionState
ãã  /
.
ãã/ 0
Open
ãã0 4
)
ãã4 5
{
åå 	
await
çç 

connection
çç 
.
çç 
	OpenAsync
çç &
(
çç& '
)
çç' (
;
çç( )
}
éé 	
await
êê 
using
êê 
var
êê 
cmd
êê 
=
êê 

connection
êê (
.
êê( )
CreateCommand
êê) 6
(
êê6 7
)
êê7 8
;
êê8 9
cmd
ëë 
.
ëë 
CommandText
ëë 
=
ëë 
$"
ëë 
$str
ëë B
{
ëëB C
table
ëëC H
}
ëëH I
$str
ëëI K
"
ëëK L
;
ëëL M
var
ìì 
result
ìì 
=
ìì 
await
ìì 
cmd
ìì 
.
ìì  
ExecuteScalarAsync
ìì 1
(
ìì1 2
)
ìì2 3
;
ìì3 4
return
îî 
result
îî 
==
îî 
DBNull
îî 
.
îî  
Value
îî  %
?
îî& '
$num
îî( )
:
îî* +
Convert
îî, 3
.
îî3 4
	ToDecimal
îî4 =
(
îî= >
result
îî> D
)
îîD E
;
îîE F
}
ïï 
public
óó 

static
óó 
(
óó 
int
óó 
page
óó 
,
óó 
int
óó  
pageSize
óó! )
)
óó) * 
ValidatePagination
óó+ =
(
óó= >
int
óó> A
page
óóB F
,
óóF G
int
óóH K
pageSize
óóL T
)
óóT U
{
òò 
var
ôô 
	validPage
ôô 
=
ôô 
page
ôô 
<
ôô 
$num
ôô  
?
ôô! "
$num
ôô# $
:
ôô% &
page
ôô' +
;
ôô+ ,
var
öö 
validPageSize
öö 
=
öö 
pageSize
öö $
is
öö% '
<
öö( )
$num
öö* +
or
öö, .
>
öö/ 0
$num
öö1 4
?
öö5 6
$num
öö7 9
:
öö: ;
pageSize
öö< D
;
ööD E
return
õõ 
(
õõ 
	validPage
õõ 
,
õõ 
validPageSize
õõ (
)
õõ( )
;
õõ) *
}
úú 
}ùù ã	
/A:\RiderProjects\teste de reparo\Models\Zona.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
Zona 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
Nome 
{ 
get 
; 
set !
;! "
}# $
=% &
default' .
!. /
;/ 0
public 

string 
Letra 
{ 
get 
; 
set "
;" #
}$ %
=& '
default( /
!/ 0
;0 1
public		 

ICollection		 
<		 
Moto		 
>		 
Motos		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
new		3 6
List		7 ;
<		; <
Moto		< @
>		@ A
(		A B
)		B C
;		C D
}

 ø
2A:\RiderProjects\teste de reparo\Models\Usuario.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
Usuario 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
NomeUsuario 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
default. 5
!5 6
;6 7
public 

string 
	SenhaHash 
{ 
get !
;! "
set# &
;& '
}( )
=* +
default, 3
!3 4
;4 5
} ≈
6A:\RiderProjects\teste de reparo\Models\StatusGrupo.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
StatusGrupo 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
Nome 
{ 
get 
; 
set !
;! "
}# $
=% &
default' .
!. /
;/ 0
public 

ICollection 
< 
Status 
> 
Statuses '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
new8 ;
List< @
<@ A
StatusA G
>G H
(H I
)I J
;J K
}		 º

1A:\RiderProjects\teste de reparo\Models\Status.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
Status 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
Nome 
{ 
get 
; 
set !
;! "
}# $
=% &
default' .
!. /
;/ 0
public 

decimal 
StatusGrupoId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 

StatusGrupo		 
StatusGrupo		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
default		3 :
!		: ;
;		; <
public

 

ICollection

 
<

 
Moto

 
>

 
Motos

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
new

3 6
List

7 ;
<

; <
Moto

< @
>

@ A
(

A B
)

B C
;

C D
} ≤
0A:\RiderProjects\teste de reparo\Models\Patio.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
Patio 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
Nome 
{ 
get 
; 
set !
;! "
}# $
=% &
default' .
!. /
;/ 0
public 

ICollection 
< 
Moto 
> 
Motos "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
new3 6
List7 ;
<; <
Moto< @
>@ A
(A B
)B C
;C D
}		 Ê
/A:\RiderProjects\teste de reparo\Models\Moto.cs
	namespace 	
MottuVision
 
. 
Models 
; 
public 
class 
Moto 
{ 
public 

decimal 
Id 
{ 
get 
; 
set  
;  !
}" #
public 

string 
Placa 
{ 
get 
; 
set "
;" #
}$ %
=& '
default( /
!/ 0
;0 1
public 

string 
Chassi 
{ 
get 
; 
set  #
;# $
}% &
=' (
default) 0
!0 1
;1 2
public		 

string		 
?		 
QrCode		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 

DateTime

 
DataEntrada

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 

DateTime 
? 
PrevisaoEntrega $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

string 
? 
Fotos 
{ 
get 
; 
set  #
;# $
}% &
public 

decimal 
ZonaId 
{ 
get 
;  
set! $
;$ %
}& '
public 

decimal 
PatioId 
{ 
get  
;  !
set" %
;% &
}' (
public 

decimal 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 

string 
? 
Observacoes 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

Zona 
Zona 
{ 
get 
; 
set 
;  
}! "
=# $
default% ,
!, -
;- .
public 

Patio 
Patio 
{ 
get 
; 
set !
;! "
}# $
=% &
default' .
!. /
;/ 0
public 

Status 
Status 
{ 
get 
; 
set  #
;# $
}% &
=' (
default) 0
!0 1
;1 2
} ™ê
KA:\RiderProjects\teste de reparo\Migrations\20250830171301_InitialCreate.cs
	namespace 	
MottuVision
 
. 

Migrations  
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
id 
= 
table 
. 
Column %
<% &
decimal& -
>- .
(. /
type/ 3
:3 4
$str5 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
nome 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR T
,T U
nullableV ^
:^ _
false` e
)e f
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
id8 :
): ;
;; <
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str $
,$ %
columns 
: 
table 
=> !
new" %
{ 
id 
= 
table 
. 
Column %
<% &
decimal& -
>- .
(. /
type/ 3
:3 4
$str5 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
nome 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR T
,T U
nullableV ^
:^ _
false` e
)e f
}   
,   
constraints!! 
:!! 
table!! "
=>!!# %
{"" 
table## 
.## 

PrimaryKey## $
(##$ %
$str##% 6
,##6 7
x##8 9
=>##: <
x##= >
.##> ?
id##? A
)##A B
;##B C
}$$ 
)$$ 
;$$ 
migrationBuilder&& 
.&& 
CreateTable&& (
(&&( )
name'' 
:'' 
$str'' 
,''  
columns(( 
:(( 
table(( 
=>(( !
new((" %
{)) 
id** 
=** 
table** 
.** 
Column** %
<**% &
decimal**& -
>**- .
(**. /
type**/ 3
:**3 4
$str**5 E
,**E F
nullable**G O
:**O P
false**Q V
)**V W
,**W X
usuario++ 
=++ 
table++ #
.++# $
Column++$ *
<++* +
string+++ 1
>++1 2
(++2 3
type++3 7
:++7 8
$str++9 H
,++H I
	maxLength++J S
:++S T
$num++U W
,++W X
nullable++Y a
:++a b
false++c h
)++h i
,++i j
senha,, 
=,, 
table,, !
.,,! "
Column,," (
<,,( )
string,,) /
>,,/ 0
(,,0 1
type,,1 5
:,,5 6
$str,,7 G
,,,G H
	maxLength,,I R
:,,R S
$num,,T W
,,,W X
nullable,,Y a
:,,a b
false,,c h
),,h i
}-- 
,-- 
constraints.. 
:.. 
table.. "
=>..# %
{// 
table00 
.00 

PrimaryKey00 $
(00$ %
$str00% 1
,001 2
x003 4
=>005 7
x008 9
.009 :
id00: <
)00< =
;00= >
}11 
)11 
;11 
migrationBuilder33 
.33 
CreateTable33 (
(33( )
name44 
:44 
$str44 
,44 
columns55 
:55 
table55 
=>55 !
new55" %
{66 
id77 
=77 
table77 
.77 
Column77 %
<77% &
decimal77& -
>77- .
(77. /
type77/ 3
:773 4
$str775 E
,77E F
nullable77G O
:77O P
false77Q V
)77V W
,77W X
nome88 
=88 
table88  
.88  !
Column88! '
<88' (
string88( .
>88. /
(88/ 0
type880 4
:884 5
$str886 E
,88E F
	maxLength88G P
:88P Q
$num88R T
,88T U
nullable88V ^
:88^ _
false88` e
)88e f
,88f g
letra99 
=99 
table99 !
.99! "
Column99" (
<99( )
string99) /
>99/ 0
(990 1
type991 5
:995 6
$str997 E
,99E F
	maxLength99G P
:99P Q
$num99R S
,99S T
nullable99U ]
:99] ^
false99_ d
)99d e
}:: 
,:: 
constraints;; 
:;; 
table;; "
=>;;# %
{<< 
table== 
.== 

PrimaryKey== $
(==$ %
$str==% .
,==. /
x==0 1
=>==2 4
x==5 6
.==6 7
id==7 9
)==9 :
;==: ;
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateTable@@ (
(@@( )
nameAA 
:AA 
$strAA 
,AA 
columnsBB 
:BB 
tableBB 
=>BB !
newBB" %
{CC 
idDD 
=DD 
tableDD 
.DD 
ColumnDD %
<DD% &
decimalDD& -
>DD- .
(DD. /
typeDD/ 3
:DD3 4
$strDD5 E
,DDE F
nullableDDG O
:DDO P
falseDDQ V
)DDV W
,DDW X
nomeEE 
=EE 
tableEE  
.EE  !
ColumnEE! '
<EE' (
stringEE( .
>EE. /
(EE/ 0
typeEE0 4
:EE4 5
$strEE6 E
,EEE F
	maxLengthEEG P
:EEP Q
$numEER T
,EET U
nullableEEV ^
:EE^ _
falseEE` e
)EEe f
,EEf g
status_grupo_idFF #
=FF$ %
tableFF& +
.FF+ ,
ColumnFF, 2
<FF2 3
decimalFF3 :
>FF: ;
(FF; <
typeFF< @
:FF@ A
$strFFB R
,FFR S
nullableFFT \
:FF\ ]
falseFF^ c
)FFc d
}GG 
,GG 
constraintsHH 
:HH 
tableHH "
=>HH# %
{II 
tableJJ 
.JJ 

PrimaryKeyJJ $
(JJ$ %
$strJJ% 0
,JJ0 1
xJJ2 3
=>JJ4 6
xJJ7 8
.JJ8 9
idJJ9 ;
)JJ; <
;JJ< =
tableKK 
.KK 

ForeignKeyKK $
(KK$ %
nameLL 
:LL 
$strLL )
,LL) *
columnMM 
:MM 
xMM  !
=>MM" $
xMM% &
.MM& '
status_grupo_idMM' 6
,MM6 7
principalTableNN &
:NN& '
$strNN( 6
,NN6 7
principalColumnOO '
:OO' (
$strOO) -
,OO- .
onDeletePP  
:PP  !
ReferentialActionPP" 3
.PP3 4
CascadePP4 ;
)PP; <
;PP< =
}QQ 
)QQ 
;QQ 
migrationBuilderSS 
.SS 
CreateTableSS (
(SS( )
nameTT 
:TT 
$strTT 
,TT 
columnsUU 
:UU 
tableUU 
=>UU !
newUU" %
{VV 
idWW 
=WW 
tableWW 
.WW 
ColumnWW %
<WW% &
decimalWW& -
>WW- .
(WW. /
typeWW/ 3
:WW3 4
$strWW5 E
,WWE F
nullableWWG O
:WWO P
falseWWQ V
)WWV W
,WWW X
placaXX 
=XX 
tableXX !
.XX! "
ColumnXX" (
<XX( )
stringXX) /
>XX/ 0
(XX0 1
typeXX1 5
:XX5 6
$strXX7 F
,XXF G
	maxLengthXXH Q
:XXQ R
$numXXS U
,XXU V
nullableXXW _
:XX_ `
falseXXa f
)XXf g
,XXg h
chassiYY 
=YY 
tableYY "
.YY" #
ColumnYY# )
<YY) *
stringYY* 0
>YY0 1
(YY1 2
typeYY2 6
:YY6 7
$strYY8 G
,YYG H
	maxLengthYYI R
:YYR S
$numYYT V
,YYV W
nullableYYX `
:YY` a
falseYYb g
)YYg h
,YYh i
qr_codeZZ 
=ZZ 
tableZZ #
.ZZ# $
ColumnZZ$ *
<ZZ* +
stringZZ+ 1
>ZZ1 2
(ZZ2 3
typeZZ3 7
:ZZ7 8
$strZZ9 I
,ZZI J
	maxLengthZZK T
:ZZT U
$numZZV Y
,ZZY Z
nullableZZ[ c
:ZZc d
trueZZe i
)ZZi j
,ZZj k
data_entrada[[  
=[[! "
table[[# (
.[[( )
Column[[) /
<[[/ 0
DateTime[[0 8
>[[8 9
([[9 :
type[[: >
:[[> ?
$str[[@ N
,[[N O
nullable[[P X
:[[X Y
false[[Z _
)[[_ `
,[[` a
previsao_entrega\\ $
=\\% &
table\\' ,
.\\, -
Column\\- 3
<\\3 4
DateTime\\4 <
>\\< =
(\\= >
type\\> B
:\\B C
$str\\D R
,\\R S
nullable\\T \
:\\\ ]
true\\^ b
)\\b c
,\\c d
fotos]] 
=]] 
table]] !
.]]! "
Column]]" (
<]]( )
string]]) /
>]]/ 0
(]]0 1
type]]1 5
:]]5 6
$str]]7 G
,]]G H
	maxLength]]I R
:]]R S
$num]]T W
,]]W X
nullable]]Y a
:]]a b
true]]c g
)]]g h
,]]h i
zona_id^^ 
=^^ 
table^^ #
.^^# $
Column^^$ *
<^^* +
decimal^^+ 2
>^^2 3
(^^3 4
type^^4 8
:^^8 9
$str^^: J
,^^J K
nullable^^L T
:^^T U
false^^V [
)^^[ \
,^^\ ]
patio_id__ 
=__ 
table__ $
.__$ %
Column__% +
<__+ ,
decimal__, 3
>__3 4
(__4 5
type__5 9
:__9 :
$str__; K
,__K L
nullable__M U
:__U V
false__W \
)__\ ]
,__] ^
	status_id`` 
=`` 
table``  %
.``% &
Column``& ,
<``, -
decimal``- 4
>``4 5
(``5 6
type``6 :
:``: ;
$str``< L
,``L M
nullable``N V
:``V W
false``X ]
)``] ^
,``^ _
observacoesaa 
=aa  !
tableaa" '
.aa' (
Columnaa( .
<aa. /
stringaa/ 5
>aa5 6
(aa6 7
typeaa7 ;
:aa; <
$straa= N
,aaN O
nullableaaP X
:aaX Y
trueaaZ ^
)aa^ _
}bb 
,bb 
constraintscc 
:cc 
tablecc "
=>cc# %
{dd 
tableee 
.ee 

PrimaryKeyee $
(ee$ %
$stree% .
,ee. /
xee0 1
=>ee2 4
xee5 6
.ee6 7
idee7 9
)ee9 :
;ee: ;
tableff 
.ff 

ForeignKeyff $
(ff$ %
namegg 
:gg 
$strgg -
,gg- .
columnhh 
:hh 
xhh  !
=>hh" $
xhh% &
.hh& '
patio_idhh' /
,hh/ 0
principalTableii &
:ii& '
$strii( /
,ii/ 0
principalColumnjj '
:jj' (
$strjj) -
,jj- .
onDeletekk  
:kk  !
ReferentialActionkk" 3
.kk3 4
Cascadekk4 ;
)kk; <
;kk< =
tablell 
.ll 

ForeignKeyll $
(ll$ %
namemm 
:mm 
$strmm .
,mm. /
columnnn 
:nn 
xnn  !
=>nn" $
xnn% &
.nn& '
	status_idnn' 0
,nn0 1
principalTableoo &
:oo& '
$stroo( 0
,oo0 1
principalColumnpp '
:pp' (
$strpp) -
,pp- .
onDeleteqq  
:qq  !
ReferentialActionqq" 3
.qq3 4
Cascadeqq4 ;
)qq; <
;qq< =
tablerr 
.rr 

ForeignKeyrr $
(rr$ %
namess 
:ss 
$strss ,
,ss, -
columntt 
:tt 
xtt  !
=>tt" $
xtt% &
.tt& '
zona_idtt' .
,tt. /
principalTableuu &
:uu& '
$struu( .
,uu. /
principalColumnvv '
:vv' (
$strvv) -
,vv- .
onDeleteww  
:ww  !
ReferentialActionww" 3
.ww3 4
Cascadeww4 ;
)ww; <
;ww< =
}xx 
)xx 
;xx 
migrationBuilderzz 
.zz 
CreateIndexzz (
(zz( )
name{{ 
:{{ 
$str{{ (
,{{( )
table|| 
:|| 
$str|| 
,|| 
column}} 
:}} 
$str}} "
)}}" #
;}}# $
migrationBuilder 
. 
CreateIndex (
(( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ 
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ 
column
áá 
:
áá 
$str
áá !
)
áá! "
;
áá" #
migrationBuilder
ââ 
.
ââ 
CreateIndex
ââ (
(
ââ( )
name
ää 
:
ää 
$str
ää &
,
ää& '
table
ãã 
:
ãã 
$str
ãã 
,
ãã 
column
åå 
:
åå 
$str
åå  
,
åå  !
unique
çç 
:
çç 
true
çç 
)
çç 
;
çç 
migrationBuilder
èè 
.
èè 
CreateIndex
èè (
(
èè( )
name
êê 
:
êê 
$str
êê %
,
êê% &
table
ëë 
:
ëë 
$str
ëë 
,
ëë 
column
íí 
:
íí 
$str
íí 
,
íí  
unique
ìì 
:
ìì 
true
ìì 
)
ìì 
;
ìì 
migrationBuilder
ïï 
.
ïï 
CreateIndex
ïï (
(
ïï( )
name
ññ 
:
ññ 
$str
ññ 1
,
ññ1 2
table
óó 
:
óó 
$str
óó 
,
óó  
column
òò 
:
òò 
$str
òò )
)
òò) *
;
òò* +
migrationBuilder
öö 
.
öö 
CreateIndex
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ *
,
õõ* +
table
úú 
:
úú 
$str
úú  
,
úú  !
column
ùù 
:
ùù 
$str
ùù !
,
ùù! "
unique
ûû 
:
ûû 
true
ûû 
)
ûû 
;
ûû 
}
üü 	
	protected
¢¢ 
override
¢¢ 
void
¢¢ 
Down
¢¢  $
(
¢¢$ %
MigrationBuilder
¢¢% 5
migrationBuilder
¢¢6 F
)
¢¢F G
{
££ 	
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• 
)
•• 
;
•• 
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®® 
)
®®  
;
®®  !
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´ 
)
´´ 
;
´´ 
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
)
ÆÆ 
;
ÆÆ  
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 
	DropTable
≥≥ &
(
≥≥& '
name
¥¥ 
:
¥¥ 
$str
¥¥ $
)
¥¥$ %
;
¥¥% &
}
µµ 	
}
∂∂ 
}∑∑ ç
6A:\RiderProjects\teste de reparo\Dtos\ZonaUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
ZonaUpdateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Nome2 6
,6 7
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& '
,' (
MinimumLength) 6
=7 8
$num9 :
): ;
]; <
string= C
LetraD I
) 
; ç
6A:\RiderProjects\teste de reparo\Dtos\ZonaCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
ZonaCreateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Nome2 6
,6 7
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& '
,' (
MinimumLength) 6
=7 8
$num9 :
): ;
]; <
string= C
LetraD I
) 
; ·
9A:\RiderProjects\teste de reparo\Dtos\UsuarioUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
UsuarioUpdateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
,( )
MinimumLength* 7
=8 9
$num: ;
); <
]< =
string> D
UsuarioE L
,L M
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& )
,) *
MinimumLength+ 8
=9 :
$num; <
)< =
]= >
string? E
SenhaF K
) 
; ·
9A:\RiderProjects\teste de reparo\Dtos\UsuarioCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
UsuarioCreateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
,( )
MinimumLength* 7
=8 9
$num: ;
); <
]< =
string> D
UsuarioE L
,L M
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& )
,) *
MinimumLength+ 8
=9 :
$num; <
)< =
]= >
string? E
SenhaF K
) 
; ¶
8A:\RiderProjects\teste de reparo\Dtos\StatusUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
StatusUpdateDto 
( 
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
, 
[		 
property		 
:		 
Required		 
(		 
ErrorMessage		 $
=		% &
$str		' E
)		E F
]		F G
decimal

 
StatusGrupoId

 
) 
; ø
=A:\RiderProjects\teste de reparo\Dtos\StatusGrupoUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record  
StatusGrupoUpdateDto "
(" #
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
) 
; ø
=A:\RiderProjects\teste de reparo\Dtos\StatusGrupoCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record  
StatusGrupoCreateDto "
(" #
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
) 
; ¶
8A:\RiderProjects\teste de reparo\Dtos\StatusCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
StatusCreateDto 
( 
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
, 
[		 
property		 
:		 
Required		 
(		 
ErrorMessage		 $
=		% &
$str		' E
)		E F
]		F G
decimal

 
StatusGrupoId

 
) 
; ≥
7A:\RiderProjects\teste de reparo\Dtos\PatioUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
PatioUpdateDto 
( 
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
) 
; ≥
7A:\RiderProjects\teste de reparo\Dtos\PatioCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
PatioCreateDto 
( 
[ 
property 
: 
Required 
( 
ErrorMessage $
=% &
$str' <
)< =
]= >
[ 
property 
: 
StringLength 
( 
$num 
,  
ErrorMessage! -
=. /
$str0 Y
)Y Z
]Z [
string 

Nome 
) 
; ï

4A:\RiderProjects\teste de reparo\Dtos\PagedResult.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
class 
PagedResult 
< 
T 
> 
{ 
public 

required 
IEnumerable 
<  
T  !
>! "
Items# (
{) *
get+ .
;. /
init0 4
;4 5
}6 7
public 

required 
int 
Page 
{ 
get "
;" #
init$ (
;( )
}* +
public		 

required		 
int		 
PageSize		  
{		! "
get		# &
;		& '
init		( ,
;		, -
}		. /
public

 

required

 
long

 

TotalCount

 #
{

$ %
get

& )
;

) *
init

+ /
;

/ 0
}

1 2
public 

IEnumerable 
< 
Link 
> 
Links "
{# $
get% (
;( )
init* .
;. /
}0 1
=2 3
[4 5
]5 6
;6 7
} ∏
6A:\RiderProjects\teste de reparo\Dtos\MotoUpdateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
MotoUpdateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Placa2 7
,7 8
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Chassi2 8
,8 9
string 

?
 
QrCode 
, 
[		 
property		 
:		 
Required		 
]		 
DateTime		 !
DataEntrada		" -
,		- .
DateTime

 
?

 
PrevisaoEntrega

 
,

 
string 

?
 
Fotos 
, 
[ 
property 
: 
Required 
] 
decimal  
ZonaId! '
,' (
[ 
property 
: 
Required 
] 
decimal  
PatioId! (
,( )
[ 
property 
: 
Required 
] 
decimal  
StatusId! )
,) *
string 

?
 
Observacoes 
) 
; ∏
6A:\RiderProjects\teste de reparo\Dtos\MotoCreateDto.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
MotoCreateDto 
( 
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Placa2 7
,7 8
[ 
property 
: 
Required 
, 
StringLength %
(% &
$num& (
)( )
]) *
string+ 1
Chassi2 8
,8 9
string 

?
 
QrCode 
, 
[		 
property		 
:		 
Required		 
]		 
DateTime		 !
DataEntrada		" -
,		- .
DateTime

 
?

 
PrevisaoEntrega

 
,

 
string 

?
 
Fotos 
, 
[ 
property 
: 
Required 
] 
decimal  
ZonaId! '
,' (
[ 
property 
: 
Required 
] 
decimal  
PatioId! (
,( )
[ 
property 
: 
Required 
] 
decimal  
StatusId! )
,) *
string 

?
 
Observacoes 
) 
; É
-A:\RiderProjects\teste de reparo\Dtos\Link.cs
	namespace 	
MottuVision
 
. 
Dtos 
; 
public 
record 
Link 
( 
string 
Rel 
, 
string %
Href& *
,* +
string, 2
Method3 9
)9 :
;: ;†á
5A:\RiderProjects\teste de reparo\Data\AppDbContext.cs
	namespace 	
MottuVision
 
. 
Data 
; 
public 
class 
AppDbContext 
( 
DbContextOptions *
<* +
AppDbContext+ 7
>7 8
options9 @
)@ A
:B C
	DbContextD M
(M N
optionsN U
)U V
{ 
public 

DbSet 
< 
Usuario 
> 
Usuarios "
=># %
Set& )
<) *
Usuario* 1
>1 2
(2 3
)3 4
;4 5
public		 

DbSet		 
<		 
Zona		 
>		 
Zonas		 
=>		 
Set		  #
<		# $
Zona		$ (
>		( )
(		) *
)		* +
;		+ ,
public

 

DbSet

 
<

 
Patio

 
>

 
Patios

 
=>

 !
Set

" %
<

% &
Patio

& +
>

+ ,
(

, -
)

- .
;

. /
public 

DbSet 
< 
StatusGrupo 
> 
StatusGrupos *
=>+ -
Set. 1
<1 2
StatusGrupo2 =
>= >
(> ?
)? @
;@ A
public 

DbSet 
< 
Status 
> 
Statuses !
=>" $
Set% (
<( )
Status) /
>/ 0
(0 1
)1 2
;2 3
public 

DbSet 
< 
Moto 
> 
Motos 
=> 
Set  #
<# $
Moto$ (
>( )
() *
)* +
;+ ,
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
Usuario #
># $
($ %
b% &
=>' )
{ 	
b 
. 
ToTable 
( 
$str 
)  
;  !
b 
. 
HasKey 
( 
x 
=> 
x 
. 
Id 
) 
.  
HasName  '
(' (
$str( 4
)4 5
;5 6
b 
. 
Property 
( 
x 
=> 
x 
. 
Id  
)  !
.! "
HasColumnName" /
(/ 0
$str0 4
)4 5
;5 6
b 
. 
Property 
( 
x 
=> 
x 
. 
NomeUsuario )
)) *
.* +
HasColumnName+ 8
(8 9
$str9 B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ S
)S T
.T U

IsRequiredU _
(_ `
)` a
;a b
b 
. 
Property 
( 
x 
=> 
x 
. 
	SenhaHash '
)' (
.( )
HasColumnName) 6
(6 7
$str7 >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
.Q R

IsRequiredR \
(\ ]
)] ^
;^ _
b 
. 
HasIndex 
( 
x 
=> 
x 
. 
NomeUsuario )
)) *
.* +
IsUnique+ 3
(3 4
)4 5
.5 6
HasDatabaseName6 E
(E F
$strF Z
)Z [
;[ \
} 	
)	 

;
 
modelBuilder 
. 
Entity 
< 
Zona  
>  !
(! "
b" #
=>$ &
{ 	
b 
. 
ToTable 
( 
$str 
) 
; 
b   
.   
HasKey   
(   
x   
=>   
x   
.   
Id   
)   
.    
HasName    '
(  ' (
$str  ( 1
)  1 2
;  2 3
b!! 
.!! 
Property!! 
(!! 
x!! 
=>!! 
x!! 
.!! 
Id!!  
)!!  !
.!!! "
HasColumnName!!" /
(!!/ 0
$str!!0 4
)!!4 5
;!!5 6
b"" 
."" 
Property"" 
("" 
x"" 
=>"" 
x"" 
."" 
Nome"" "
)""" #
.""# $
HasColumnName""$ 1
(""1 2
$str""2 8
)""8 9
.""9 :
HasMaxLength"": F
(""F G
$num""G I
)""I J
.""J K

IsRequired""K U
(""U V
)""V W
;""W X
b## 
.## 
Property## 
(## 
x## 
=>## 
x## 
.## 
Letra## #
)### $
.##$ %
HasColumnName##% 2
(##2 3
$str##3 :
)##: ;
.##; <
HasMaxLength##< H
(##H I
$num##I J
)##J K
.##K L

IsRequired##L V
(##V W
)##W X
;##X Y
}$$ 	
)$$	 

;$$
 
modelBuilder'' 
.'' 
Entity'' 
<'' 
Patio'' !
>''! "
(''" #
b''# $
=>''% '
{(( 	
b)) 
.)) 
ToTable)) 
()) 
$str)) 
))) 
;)) 
b** 
.** 
HasKey** 
(** 
x** 
=>** 
x** 
.** 
Id** 
)** 
.**  
HasName**  '
(**' (
$str**( 2
)**2 3
;**3 4
b++ 
.++ 
Property++ 
(++ 
x++ 
=>++ 
x++ 
.++ 
Id++  
)++  !
.++! "
HasColumnName++" /
(++/ 0
$str++0 4
)++4 5
;++5 6
b,, 
.,, 
Property,, 
(,, 
x,, 
=>,, 
x,, 
.,, 
Nome,, "
),," #
.,,# $
HasColumnName,,$ 1
(,,1 2
$str,,2 8
),,8 9
.,,9 :
HasMaxLength,,: F
(,,F G
$num,,G I
),,I J
.,,J K

IsRequired,,K U
(,,U V
),,V W
;,,W X
}-- 	
)--	 

;--
 
modelBuilder00 
.00 
Entity00 
<00 
StatusGrupo00 '
>00' (
(00( )
b00) *
=>00+ -
{11 	
b22 
.22 
ToTable22 
(22 
$str22 $
)22$ %
;22% &
b33 
.33 
HasKey33 
(33 
x33 
=>33 
x33 
.33 
Id33 
)33 
.33  
HasName33  '
(33' (
$str33( 9
)339 :
;33: ;
b44 
.44 
Property44 
(44 
x44 
=>44 
x44 
.44 
Id44  
)44  !
.44! "
HasColumnName44" /
(44/ 0
$str440 4
)444 5
;445 6
b55 
.55 
Property55 
(55 
x55 
=>55 
x55 
.55 
Nome55 "
)55" #
.55# $
HasColumnName55$ 1
(551 2
$str552 8
)558 9
.559 :
HasMaxLength55: F
(55F G
$num55G I
)55I J
.55J K

IsRequired55K U
(55U V
)55V W
;55W X
}66 	
)66	 

;66
 
modelBuilder99 
.99 
Entity99 
<99 
Status99 "
>99" #
(99# $
b99$ %
=>99& (
{:: 	
b;; 
.;; 
ToTable;; 
(;; 
$str;; 
);; 
;;;  
b<< 
.<< 
HasKey<< 
(<< 
x<< 
=><< 
x<< 
.<< 
Id<< 
)<< 
.<<  
HasName<<  '
(<<' (
$str<<( 3
)<<3 4
;<<4 5
b== 
.== 
Property== 
(== 
x== 
=>== 
x== 
.== 
Id==  
)==  !
.==! "
HasColumnName==" /
(==/ 0
$str==0 4
)==4 5
;==5 6
b>> 
.>> 
Property>> 
(>> 
x>> 
=>>> 
x>> 
.>> 
Nome>> "
)>>" #
.>># $
HasColumnName>>$ 1
(>>1 2
$str>>2 8
)>>8 9
.>>9 :
HasMaxLength>>: F
(>>F G
$num>>G I
)>>I J
.>>J K

IsRequired>>K U
(>>U V
)>>V W
;>>W X
b?? 
.?? 
Property?? 
(?? 
x?? 
=>?? 
x?? 
.?? 
StatusGrupoId?? +
)??+ ,
.??, -
HasColumnName??- :
(??: ;
$str??; L
)??L M
.??M N

IsRequired??N X
(??X Y
)??Y Z
;??Z [
b@@ 
.@@ 
HasOne@@ 
(@@ 
x@@ 
=>@@ 
x@@ 
.@@ 
StatusGrupo@@ '
)@@' (
.AA 
WithManyAA 
(AA 
gAA 
=>AA 
gAA 
.AA 
StatusesAA &
)AA& '
.BB 
HasForeignKeyBB 
(BB 
xBB 
=>BB  
xBB! "
.BB" #
StatusGrupoIdBB# 0
)BB0 1
.CC 
HasConstraintNameCC 
(CC  
$strCC  +
)CC+ ,
;CC, -
}DD 	
)DD	 

;DD
 
modelBuilderGG 
.GG 
EntityGG 
<GG 
MotoGG  
>GG  !
(GG! "
bGG" #
=>GG$ &
{HH 	
bII 
.II 
ToTableII 
(II 
$strII 
)II 
;II 
bJJ 
.JJ 
HasKeyJJ 
(JJ 
xJJ 
=>JJ 
xJJ 
.JJ 
IdJJ 
)JJ 
.JJ  
HasNameJJ  '
(JJ' (
$strJJ( 1
)JJ1 2
;JJ2 3
bKK 
.KK 
PropertyKK 
(KK 
xKK 
=>KK 
xKK 
.KK 
IdKK  
)KK  !
.KK! "
HasColumnNameKK" /
(KK/ 0
$strKK0 4
)KK4 5
;KK5 6
bLL 
.LL 
PropertyLL 
(LL 
xLL 
=>LL 
xLL 
.LL 
PlacaLL #
)LL# $
.LL$ %
HasColumnNameLL% 2
(LL2 3
$strLL3 :
)LL: ;
.LL; <
HasMaxLengthLL< H
(LLH I
$numLLI K
)LLK L
.LLL M

IsRequiredLLM W
(LLW X
)LLX Y
;LLY Z
bMM 
.MM 
PropertyMM 
(MM 
xMM 
=>MM 
xMM 
.MM 
ChassiMM $
)MM$ %
.MM% &
HasColumnNameMM& 3
(MM3 4
$strMM4 <
)MM< =
.MM= >
HasMaxLengthMM> J
(MMJ K
$numMMK M
)MMM N
.MMN O

IsRequiredMMO Y
(MMY Z
)MMZ [
;MM[ \
bNN 
.NN 
PropertyNN 
(NN 
xNN 
=>NN 
xNN 
.NN 
QrCodeNN $
)NN$ %
.NN% &
HasColumnNameNN& 3
(NN3 4
$strNN4 =
)NN= >
.NN> ?
HasMaxLengthNN? K
(NNK L
$numNNL O
)NNO P
;NNP Q
bOO 
.OO 
PropertyOO 
(OO 
xOO 
=>OO 
xOO 
.OO 
DataEntradaOO )
)OO) *
.OO* +
HasColumnNameOO+ 8
(OO8 9
$strOO9 G
)OOG H
.OOH I

IsRequiredOOI S
(OOS T
)OOT U
;OOU V
bPP 
.PP 
PropertyPP 
(PP 
xPP 
=>PP 
xPP 
.PP 
PrevisaoEntregaPP -
)PP- .
.PP. /
HasColumnNamePP/ <
(PP< =
$strPP= O
)PPO P
;PPP Q
bQQ 
.QQ 
PropertyQQ 
(QQ 
xQQ 
=>QQ 
xQQ 
.QQ 
FotosQQ #
)QQ# $
.QQ$ %
HasColumnNameQQ% 2
(QQ2 3
$strQQ3 :
)QQ: ;
.QQ; <
HasMaxLengthQQ< H
(QQH I
$numQQI L
)QQL M
;QQM N
bRR 
.RR 
PropertyRR 
(RR 
xRR 
=>RR 
xRR 
.RR 
ZonaIdRR $
)RR$ %
.RR% &
HasColumnNameRR& 3
(RR3 4
$strRR4 =
)RR= >
.RR> ?

IsRequiredRR? I
(RRI J
)RRJ K
;RRK L
bSS 
.SS 
PropertySS 
(SS 
xSS 
=>SS 
xSS 
.SS 
PatioIdSS %
)SS% &
.SS& '
HasColumnNameSS' 4
(SS4 5
$strSS5 ?
)SS? @
.SS@ A

IsRequiredSSA K
(SSK L
)SSL M
;SSM N
bTT 
.TT 
PropertyTT 
(TT 
xTT 
=>TT 
xTT 
.TT 
StatusIdTT &
)TT& '
.TT' (
HasColumnNameTT( 5
(TT5 6
$strTT6 A
)TTA B
.TTB C

IsRequiredTTC M
(TTM N
)TTN O
;TTO P
bUU 
.UU 
PropertyUU 
(UU 
xUU 
=>UU 
xUU 
.UU 
ObservacoesUU )
)UU) *
.UU* +
HasColumnNameUU+ 8
(UU8 9
$strUU9 F
)UUF G
;UUG H
bVV 
.VV 
HasIndexVV 
(VV 
xVV 
=>VV 
xVV 
.VV 
PlacaVV #
)VV# $
.VV$ %
IsUniqueVV% -
(VV- .
)VV. /
.VV/ 0
HasDatabaseNameVV0 ?
(VV? @
$strVV@ O
)VVO P
;VVP Q
bWW 
.WW 
HasIndexWW 
(WW 
xWW 
=>WW 
xWW 
.WW 
ChassiWW $
)WW$ %
.WW% &
IsUniqueWW& .
(WW. /
)WW/ 0
.WW0 1
HasDatabaseNameWW1 @
(WW@ A
$strWWA Q
)WWQ R
;WWR S
bYY 
.YY 
HasOneYY 
(YY 
xYY 
=>YY 
xYY 
.YY 
ZonaYY  
)YY  !
.YY! "
WithManyYY" *
(YY* +
zYY+ ,
=>YY- /
zYY0 1
.YY1 2
MotosYY2 7
)YY7 8
.YY8 9
HasForeignKeyYY9 F
(YYF G
xYYG H
=>YYI K
xYYL M
.YYM N
ZonaIdYYN T
)YYT U
.YYU V
HasConstraintNameYYV g
(YYg h
$strYYh v
)YYv w
;YYw x
bZZ 
.ZZ 
HasOneZZ 
(ZZ 
xZZ 
=>ZZ 
xZZ 
.ZZ 
PatioZZ !
)ZZ! "
.ZZ" #
WithManyZZ# +
(ZZ+ ,
pZZ, -
=>ZZ. 0
pZZ1 2
.ZZ2 3
MotosZZ3 8
)ZZ8 9
.ZZ9 :
HasForeignKeyZZ: G
(ZZG H
xZZH I
=>ZZJ L
xZZM N
.ZZN O
PatioIdZZO V
)ZZV W
.ZZW X
HasConstraintNameZZX i
(ZZi j
$strZZj y
)ZZy z
;ZZz {
b[[ 
.[[ 
HasOne[[ 
([[ 
x[[ 
=>[[ 
x[[ 
.[[ 
Status[[ "
)[[" #
.[[# $
WithMany[[$ ,
([[, -
s[[- .
=>[[/ 1
s[[2 3
.[[3 4
Motos[[4 9
)[[9 :
.[[: ;
HasForeignKey[[; H
([[H I
x[[I J
=>[[K M
x[[N O
.[[O P
StatusId[[P X
)[[X Y
.[[Y Z
HasConstraintName[[Z k
([[k l
$str[[l |
)[[| }
;[[} ~
}\\ 	
)\\	 

;\\
 
}]] 
}^^ ÛC
7A:\RiderProjects\teste de reparo\DatabaseInitializer.cs
	namespace 	
MottuVision
 
. 
Api 
; 
public 
static 
class 
DatabaseInitializer '
{ 
public		 

static		 
async		 
Task		 %
EnsureCreatedAndSeedAsync		 6
(		6 7
IServiceProvider		7 G
sp		H J
,		J K
CancellationToken		L ]
ct		^ `
=		a b
default		c j
)		j k
{

 
var 
cfg 
= 
sp 
. 
GetRequiredService '
<' (
IConfiguration( 6
>6 7
(7 8
)8 9
;9 :
var 
enabled 
= 
cfg 
. 
GetValue "
(" #
$str# 1
,1 2
true3 7
)7 8
;8 9
if 

( 
! 
enabled 
) 
return 
; 
var 
db 
= 
sp 
. 
GetRequiredService &
<& '
AppDbContext' 3
>3 4
(4 5
)5 6
;6 7
var 
conn 
= 
( 
OracleConnection $
)$ %
db% '
.' (
Database( 0
.0 1
GetDbConnection1 @
(@ A
)A B
;B C
await 
conn 
. 
	OpenAsync 
( 
ct 
)  
;  !
using 
var 
cmd 
= 
conn 
. 
CreateCommand *
(* +
)+ ,
;, -
cmd 
. 
CommandText 
= 
$str 
; 
await 
cmd 
.  
ExecuteNonQueryAsync &
(& '
ct' )
)) *
;* +
cmd 
. 
CommandText 
= 
$str! 
;!! 
await"" 
cmd"" 
.""  
ExecuteNonQueryAsync"" &
(""& '
ct""' )
)"") *
;""* +
cmd$$ 
.$$ 
CommandText$$ 
=$$ 
$str$( 
;(( 
await)) 
cmd)) 
.))  
ExecuteNonQueryAsync)) &
())& '
ct))' )
)))) *
;))* +
cmd++ 
.++ 
CommandText++ 
=++ 
$str+/ 
;// 
await00 
cmd00 
.00  
ExecuteNonQueryAsync00 &
(00& '
ct00' )
)00) *
;00* +
cmd22 
.22 
CommandText22 
=22 
$str26 
;66 
await77 
cmd77 
.77  
ExecuteNonQueryAsync77 &
(77& '
ct77' )
)77) *
;77* +
cmd99 
.99 
CommandText99 
=99 
$str9= 
;== 
await>> 
cmd>> 
.>>  
ExecuteNonQueryAsync>> &
(>>& '
ct>>' )
)>>) *
;>>* +
cmdAA 
.AA 
CommandTextAA 
=AA 
$strAH 
;HH 
awaitII 
cmdII 
.II  
ExecuteNonQueryAsyncII &
(II& '
ctII' )
)II) *
;II* +
cmdKK 
.KK 
CommandTextKK 
=KK 
$strKQ 
;QQ 
awaitRR 
cmdRR 
.RR  
ExecuteNonQueryAsyncRR &
(RR& '
ctRR' )
)RR) *
;RR* +
cmdTT 
.TT 
CommandTextTT 
=TT 
$strTY 
;YY 
awaitZZ 
cmdZZ 
.ZZ  
ExecuteNonQueryAsyncZZ &
(ZZ& '
ctZZ' )
)ZZ) *
;ZZ* +
cmd\\ 
.\\ 
CommandText\\ 
=\\ 
$str\a 
;aa 
awaitbb 
cmdbb 
.bb  
ExecuteNonQueryAsyncbb &
(bb& '
ctbb' )
)bb) *
;bb* +
cmddd 
.dd 
CommandTextdd 
=dd 
$strdk 
;kk 
awaitll 
cmdll 
.ll  
ExecuteNonQueryAsyncll &
(ll& '
ctll' )
)ll) *
;ll* +
cmdnn 
.nn 
CommandTextnn 
=nn 
$str	nÅ 
;
ÅÅ 
await
ÇÇ 
cmd
ÇÇ 
.
ÇÇ "
ExecuteNonQueryAsync
ÇÇ &
(
ÇÇ& '
ct
ÇÇ' )
)
ÇÇ) *
;
ÇÇ* +
cmd
áá 
.
áá 
CommandText
áá 
=
áá 
$str
áá e
;
ááe f
await
àà 
cmd
àà 
.
àà "
ExecuteNonQueryAsync
àà &
(
àà& '
ct
àà' )
)
àà) *
;
àà* +
cmd
ää 
.
ää 
CommandText
ää 
=
ää 
$str
ää e
;
ääe f
await
ãã 
cmd
ãã 
.
ãã "
ExecuteNonQueryAsync
ãã &
(
ãã& '
ct
ãã' )
)
ãã) *
;
ãã* +
cmd
éé 
.
éé 
CommandText
éé 
=
éé 
$str
éé W
;
ééW X
await
èè 
cmd
èè 
.
èè "
ExecuteNonQueryAsync
èè &
(
èè& '
ct
èè' )
)
èè) *
;
èè* +
cmd
ëë 
.
ëë 
CommandText
ëë 
=
ëë 
$str
ëë U
;
ëëU V
await
íí 
cmd
íí 
.
íí "
ExecuteNonQueryAsync
íí &
(
íí& '
ct
íí' )
)
íí) *
;
íí* +
cmd
ïï 
.
ïï 
CommandText
ïï 
=
ïï 
$str
ïï N
;
ïïN O
await
ññ 
cmd
ññ 
.
ññ "
ExecuteNonQueryAsync
ññ &
(
ññ& '
ct
ññ' )
)
ññ) *
;
ññ* +
cmd
òò 
.
òò 
CommandText
òò 
=
òò 
$str
òò N
;
òòN O
await
ôô 
cmd
ôô 
.
ôô "
ExecuteNonQueryAsync
ôô &
(
ôô& '
ct
ôô' )
)
ôô) *
;
ôô* +
cmd
úú 
.
úú 
CommandText
úú 
=
úú 
$str
úú Y
;
úúY Z
await
ùù 
cmd
ùù 
.
ùù "
ExecuteNonQueryAsync
ùù &
(
ùù& '
ct
ùù' )
)
ùù) *
;
ùù* +
cmd
üü 
.
üü 
CommandText
üü 
=
üü 
$str
üü U
;
üüU V
await
†† 
cmd
†† 
.
†† "
ExecuteNonQueryAsync
†† &
(
††& '
ct
††' )
)
††) *
;
††* +
cmd
££ 
.
££ 
CommandText
££ 
=
££ 
$str
££ ^
;
££^ _
await
§§ 
cmd
§§ 
.
§§ "
ExecuteNonQueryAsync
§§ &
(
§§& '
ct
§§' )
)
§§) *
;
§§* +
cmd
¶¶ 
.
¶¶ 
CommandText
¶¶ 
=
¶¶ 
$str
¶¶ f
;
¶¶f g
await
ßß 
cmd
ßß 
.
ßß "
ExecuteNonQueryAsync
ßß &
(
ßß& '
ct
ßß' )
)
ßß) *
;
ßß* +
cmd
©© 
.
©© 
CommandText
©© 
=
©© 
$str
©© d
;
©©d e
await
™™ 
cmd
™™ 
.
™™ "
ExecuteNonQueryAsync
™™ &
(
™™& '
ct
™™' )
)
™™) *
;
™™* +
cmd
≠≠ 
.
≠≠ 
CommandText
≠≠ 
=
≠≠ 
$str
≠Æ |
;
ÆÆ| }
await
ØØ 
cmd
ØØ 
.
ØØ "
ExecuteNonQueryAsync
ØØ &
(
ØØ& '
ct
ØØ' )
)
ØØ) *
;
ØØ* +
cmd
±± 
.
±± 
CommandText
±± 
=
±± 
$str
±≤ s
;
≤≤s t
await
≥≥ 
cmd
≥≥ 
.
≥≥ "
ExecuteNonQueryAsync
≥≥ &
(
≥≥& '
ct
≥≥' )
)
≥≥) *
;
≥≥* +
await
µµ 
conn
µµ 
.
µµ 

CloseAsync
µµ 
(
µµ 
)
µµ 
;
µµ  
}
∂∂ 
}∑∑ 